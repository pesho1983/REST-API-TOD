{
	"info": {
		"_postman_id": "3e8e3a01-a768-4470-a4a5-57ee93f7bd65",
		"name": "Regresion-Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"_postman_id": "8be11982-10f6-45ee-ae00-cc96bf6d9605",
			"name": "List all Lists",
			"item": [
				{
					"_postman_id": "f3f52853-789a-4406-8d18-43485aabdd74",
					"name": "[aUser] List all lists [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f62cd09c-937e-4432-9ba2-c22164b2bb40",
								"type": "text/javascript",
								"exec": [
									"//var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"//tests['Body is corect'] = data.message === \"Insufficient rights for that action. Please contact administrator.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200",
									"",
									"pm.test(\"Body is corect\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Insufficient rights for that action. Please contact administrator.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/list-all-lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"list-all-lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "3ee4004c-9ff4-4337-92c4-3927fb62aac0",
					"name": "[aAdmin] List all active lists [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c2027c3-1d2f-45eb-9be7-01afd96a55dc",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"//tests['Validate schema'] = tv4.validate(dara, schema);",
									"tests['Status code is 200'] = responseCode.code === 200;",
									"",
									" for (var num in data){",
									"   tests['List is active'] = data[num].list_is_active === 1; ",
									"   }",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/list-all-lists?status=active",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"list-all-lists"
							],
							"query": [
								{
									"key": "status",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0d486c31-5f7c-41ca-bb51-9b9c4fa2908f",
					"name": "[aAdmin] List all lists [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7abd7f04-e042-4143-b1df-d2a7fb544a93",
								"type": "text/javascript",
								"exec": [
									"tests['Status code is 200'] = responseCode.code === 200;",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/list-all-lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"list-all-lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0de3760b-656c-40cd-ac78-6a1bd06e6278",
					"name": "[aAdmin] List all inactive lists [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad729937-68c1-460a-bda9-3561d5ca8442",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"for (var num in data){",
									"   tests['List\\'s are inactive'] = data[num].list_is_active === 0; ",
									"   }",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/list-all-lists?status=inactive",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"list-all-lists"
							],
							"query": [
								{
									"key": "status",
									"value": "inactive"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "041ce41a-8ddb-4a52-ad53-9892a8a3f4ac",
					"name": "[aUser] List all active lists [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8556f323-dc4c-453d-a857-83a569ed932e",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Insufficient rights for that action. Please contact administrator.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/list-all-lists?status=active",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"list-all-lists"
							],
							"query": [
								{
									"key": "status",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "434cc1ad-aed6-4ed8-b7b6-c7ab84fa1785",
					"name": "[iAdmin] List all lists [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a037e52d-631a-4938-84a2-68f45fe5cfcf",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/list-all-lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"list-all-lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "2c6e0e31-0afe-4fd4-87ea-3466d9798015",
					"name": "[aUser] List all inactive lists [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c48198cc-06f1-4c63-baac-c44e93fa4267",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Insufficient rights for that action. Please contact administrator.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/list-all-lists?status=inactive",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"list-all-lists"
							],
							"query": [
								{
									"key": "status",
									"value": "inactive"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "568d7dc9-c02f-42bf-ab5e-9264c9dbc827",
					"name": "[iUser] List all lists [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5030b86b-7cf0-4061-b456-a8cad2705c7c",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/list-all-lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"list-all-lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "337e7f38-b62d-4915-905e-e2c98126ff19",
					"name": "[noAuth] List all lists [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31e4d1d6-8c51-4425-90ff-f3006e2d763e",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Authorization required.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/list-all-lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"list-all-lists"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "59660185-cb38-48d5-9fef-33ff3024b4de",
			"name": "List List's Task",
			"item": [
				{
					"_postman_id": "d0c7e884-0b42-4f46-a825-ff8d380228b1",
					"name": "[aAdmin] Try to list his own task's with active list id. [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "550ea50d-a6ec-4a66-bb40-1acc22b3b497",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message is available.\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The tasks in\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=19",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "19"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "9ae635d5-c30e-45d2-bb3b-6918c82c12bc",
					"name": "[aAdmin] try to list his own task's with inactive list id. [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9a0e1c56-e12a-442a-bf1c-4271d4f626ef",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message 'The tasks in list_id....' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The tasks in\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=24",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "24"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a39cbacf-b594-4969-b31d-3020b987c3d9",
					"name": "[aAdmin] try to list someone else task's with active list id. [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd04d9f0-c2bf-495f-90c3-5cf16ef09cfc",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message 'The tasks in list_id....' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The tasks in\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "127"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d0578421-62d5-4a8d-a09e-ae549540b39d",
					"name": "[aAdmin] try to list someone else task's with inactive list id. [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1963b535-20cf-4102-9414-f1ae7847a318",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message 'The tasks in list_id....' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The tasks in\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7049d020-98e2-4f0d-8675-ee53e609f964",
					"name": "[aAdmin] try to list someone else task's with non-existing list id. [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f9708c04-fde7-4f11-98f1-f9f403afa9c8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Message: 'List list_id does not exist..' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=12",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "12"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1b6b81b4-5199-41a0-ab03-6de5cb5fa74a",
					"name": "[aUser] try to list someone else task's with active list id. [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0521a402-b714-4547-a4fc-37ae6b0a4e9c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message that the list does not exist is present.\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"List 127 does not exist!\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "127"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b4220b45-4662-4f86-bd5c-9e7c2bfd3dcf",
					"name": "[aUser] try to list someone else task's with inactive list id [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "07230689-c062-4eaf-a515-35e9b2123db4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message that the list does not exist is present.\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"List 128 does not exist!\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "3d3d9f14-87e6-43bc-bacc-a05d3353f5ad",
					"name": "[aUser] try to list his own task's with active list id [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9524f40e-0683-4d24-8951-16b6d18b823d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Message: 'The tasks in list_id...' is present\" , function () {",
									"    pm.expect(pm.response.text()).to.include(\"The tasks in\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=109",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "109"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c64e4952-80c8-4c3b-94e7-a3e701d20ed3",
					"name": "[aUser] try to list his own task's with inactive list id [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c67bb3a6-f345-4c01-a689-c88d4f109cae",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message: 'List list_id' .. does not exist any more' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"does not exist any more!\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=110",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "110"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "37ad7feb-7839-48ff-8d20-c78ad85cc21e",
					"name": "[iAdmin] try to list his own task's with active list id. [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd17afbb-7b7d-4f28-84ab-280f107068e5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message: 'Account disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=129",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "129"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c1d722c9-df4c-46da-9b44-305fa8974a00",
					"name": "[iAdmin] try to list his own task's with inactive list id. [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "646a1c59-39a0-417f-bb7f-a624fac1ff74",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account is disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=130",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "130"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d2812025-e560-4ccc-af81-b7dc2e7aee51",
					"name": "[iAdmin] try to list someone else task's with active list id. [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e41186d8-5d03-4ab4-90f1-f8aba99b1452",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account is disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "127"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "51a540f1-7ae7-4452-ba31-be7b75066c9b",
					"name": "[iAdmin] try to list someone else task's with inactive list id. [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "209ca173-6005-43fa-8436-79ed01df84eb",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account is disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "8e08a32f-7b24-4f89-8d1b-c27485b55339",
					"name": "[iAdmin] try to list someone else task's with non-existing list id. [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4e237869-6023-4b24-8c11-a11f8e3c0e49",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account is disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=12",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "12"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "071a1ef5-1006-4453-9d65-16e245d92e12",
					"name": "[iUser] try to list his own task's with active list id [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08ad5597-6b93-45e8-ae75-d9c6c753ad85",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account is disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inact_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "131"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "ee19eab8-642d-4aae-8b60-b04a48f474fa",
					"name": "[iUser] try to list his own task's with inactive list id [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "353d662a-3db1-4684-b2d5-109fdae9a035",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account is disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inact_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=132",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "132"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "19f40c72-f55a-490e-b58e-90833bcd90ea",
					"name": "[iUser] try to list someone else task's with active list id [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45d8800c-978e-49bc-9704-427ae760fc2b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account is disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inact_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "127"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "9fea7bb2-b042-41b9-ab82-fd59352881cb",
					"name": "[iUser] try to list someone else task's with inactive list id [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "90088047-9ea4-43df-98a4-54706b2d9489",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account is disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inact_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "6e919d94-f53e-4f9f-a35f-6dc1ae3c29c0",
					"name": "[noAuth] try to list someone else task's with non-existing list id. [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "66cc1050-0f5c-468f-9bbf-8e8ed3bb206f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Authorization required.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=12",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "12"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "bcfcf31a-03f9-429b-a196-888949f0953b",
					"name": "[noAuth] try to list task of existing active admin [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0a346f1c-f000-412f-9e27-377001bd9264",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Authorization required.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=19",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "19"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "80120f78-b931-4d92-8a61-76cce4062213",
					"name": "[noAuth] try to list task of existing inactive admin [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8fab048-4ac9-49b9-af31-76a4ce254a5a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Authorization required.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=129",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "129"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "daa54ad3-766b-459c-84f2-710199a77028",
					"name": "[noAuth] try to list task of existing inactive user [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "328a79a5-be89-42ef-b196-fd83e64993b9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Authorization required.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "131"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "64ee3a5d-7e86-4715-b734-dfe571d0c8d2",
			"name": "List User's List",
			"item": [
				{
					"_postman_id": "a006baaa-2427-4480-95eb-ec1530efee71",
					"name": "List user's lists as an active user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f10d8e54-1847-47f1-8ba6-a74655fb6595",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Contains List ID\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_id\");",
									"});",
									"",
									"pm.test(\"Contains List Title\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_title\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						},
						"description": "An active user logs into the system with valid credentials and selects a GET Lists request in order to get all his lists."
					},
					"response": []
				},
				{
					"_postman_id": "67183682-df0e-4f65-a682-0ab409a4ded6",
					"name": "List user's lists as an inactive user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7181ad60-9a0b-43a0-ab25-d844845f0608",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account Disabled' is displayed\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "inactive_user",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						},
						"description": "An inactive user tries to log into the system with valid credentials and selects a GET Lists request in order to get all his lists."
					},
					"response": []
				},
				{
					"_postman_id": "926dbd43-5274-4547-906f-031b1438641f",
					"name": "List a specific user's lists as an active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "98669d4b-0107-409c-83cd-e30d6d538773",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Contains 'List ID: 60' which belongs to the other user'\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"60,\");",
									"});",
									"",
									"",
									"pm.test(\"Contains 'Active Status'\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"80,\");",
									"});",
									"",
									"pm.test(\"Contains 'Inactive Status'\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"81,\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?user_id=203",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "user_id",
									"value": "203"
								}
							]
						},
						"description": "An active admin logs into the system with valid credentials and selects a GET Lists request in order to get all lists of a specific user."
					},
					"response": []
				},
				{
					"_postman_id": "c190bee4-8dfd-4ba4-b1ef-5793efcf6cf8",
					"name": "List user's lists as an inactive admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "419245bf-7957-44b9-a40c-73a5eaeab66b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message 'Acount is disabled' is diplayed\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactive_admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						},
						"description": "An inactive admin tries to log into the system with valid credentials and selects a GET Lists request in order to get all his lists."
					},
					"response": []
				},
				{
					"_postman_id": "80a487c1-739d-46ff-9d12-90eed2b5aa7b",
					"name": "List user's lists as a non-existing user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b6b771d4-765b-4050-8d53-63a2fc0f8525",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message 'Authorization required' is displayed\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						},
						"description": "A non-existing user tries to log into the system with non-existing credentials and selects a GET Lists request in order to get others' lists."
					},
					"response": []
				},
				{
					"_postman_id": "03344cc7-a5ec-4434-bba3-b145973c164b",
					"name": "List а specific user's lists as another active user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "50680755-787d-4657-9491-f09846fa6e16",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {",
									"    console.log(response.json());",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8abdf29c-3013-4c69-a667-5a3e474bf66e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"The lists of the login account is present.\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"18\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?user_id=61",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "user_id",
									"value": "61"
								}
							]
						},
						"description": "An active user logs into the system with valid credentials and selects a GET Lists request with the ID of another user in order to get his lists."
					},
					"response": []
				},
				{
					"_postman_id": "97193140-3a99-4d22-8e93-e3ec1ff5dcc4",
					"name": "List user's lists as an active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "68c06a23-b03f-42f7-914d-f36937bd36e8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"The logged in admin's list is present.\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"123\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						},
						"description": "An active admin logs into the system with valid credentials and selects a GET Lists request in order to get all his lists."
					},
					"response": []
				},
				{
					"_postman_id": "bd3cf656-16be-4122-a66f-e6e881625852",
					"name": "List user's active lists as an active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d78fd0b-c509-4fc9-babc-45842cf69b34",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"The active lists of the logged in admin is present.\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"1\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						},
						"description": "An active admin logs into the system with valid credentials and selects a GET Lists request in order to check all his active lists."
					},
					"response": []
				},
				{
					"_postman_id": "8d7f7028-c7b8-4189-8d57-8851f09becec",
					"name": "List user's inactive lists as an active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "86e49fb3-f859-49d7-a23d-a870c5fd3d1e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"All inactive lists of the logged in admin is present.\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"80,\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "active_admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						},
						"description": "An active admin logs into the system with valid credentials and selects a GET Lists request in order to check all his inactive lists."
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "19bb4fb6-151e-4008-be86-917808389125",
			"name": "List Users",
			"item": [
				{
					"_postman_id": "4573f3cd-d9d7-472d-aa9a-9ed41e42c1af",
					"name": "[aUser] List your own lists [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a9e93df1-a0f3-494d-95d7-904fe9013374",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Lists are available\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								""
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "84b63544-3d13-494f-bb75-e2cb6398950d",
					"name": "[iUser] List your own lists [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "036af5a6-dbd9-4c16-8546-87d1556db43b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Message: 'Account disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inact_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								""
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "f41dec43-75a2-4253-9ab2-513f6cc3fa72",
					"name": "[aAdmin] List a specific user's lists [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09e80143-25ff-448b-8ca3-8cf04da617ff",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"The lists are available.\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?user_id=552",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "user_id",
									"value": "552"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "6e04cd34-59ee-4c66-8376-dc1ce5e7ae42",
					"name": "[aUser] List а specific user's lists [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a34002d1-7d82-49fe-a944-792804b480b7",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Only the logged in user's list is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"18\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?user_id=554",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "user_id",
									"value": "554"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "be5197b9-cc82-4f11-b2e9-0e88e1c19c0f",
					"name": "[iAdmin] List your own lists [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf667240-8dbb-4775-900d-1e9a529ed5cd",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Message: 'Account disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								""
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "afa5bf1b-d0e6-489f-a386-3d2877c4f51c",
					"name": "[noAuth] List your own lists [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c11b28e4-0b37-43e5-82c0-a7bf79ff35e2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Message: 'Authorization required.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								""
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a6566958-432e-4636-8a8e-6029754dc9de",
					"name": "[aAdmin] List your own lists [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64f220b6-7236-4ecb-8b1c-697bb8aa66cf",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"The lists is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "7d78a621-9431-4322-b830-6b0cd627547d",
			"name": "Create User",
			"item": [
				{
					"_postman_id": "b1fdca9f-ddea-42e0-9ede-d2c2941fd499",
					"name": "Create user with unique username and mail as active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c55cad88-bc76-4514-b340-464ade580917",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"'id' of the user is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"{{$timestamp}}@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						},
						"description": "Create user with unique username and mail."
					},
					"response": []
				},
				{
					"_postman_id": "ed2d26bc-a57f-45b8-b6a4-9e4b61bb58ef",
					"name": "Create user only with email, username and password as active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "54182797-e3e7-4ff5-b85a-1ec239b43e63",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"'id' of the user is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"\",\n    \"surname\" : \"\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"{{$timestamp}}@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "2525e2ce-772f-4add-9c2d-df89b4a40485",
					"name": "Create user with empty fields as active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00d48bd5-c82d-480c-a9ab-0f8a06465701",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message: 'Invalid data.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid data.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"\",\n    \"surname\" : \"\",\n    \"username\": \"\",\n    \"mail\": \"\",\n    \"password\": \"\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b6549480-3a1b-47d3-90a2-e626901b09c4",
					"name": "Create user only with email and password as active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9048df74-beee-4d0c-bca5-2f3d6b52f768",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message: 'Invalid data.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid data.\");",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dad94356-23c1-4dc9-88a7-0629a9ac651c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"\",\n    \"surname\" : \"\",\n    \"username\": \"\",\n    \"mail\": \"{{$timestamp}}\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "dba12c28-b266-43e6-ba36-3d7d62d7fadf",
					"name": "Create admin user as active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cfd21c71-4eb4-42e4-a40c-dfe89b544425",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"'id' of the user is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"\",\n    \"surname\" : \"\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"{{$timestamp}}\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 1\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7bb36557-42fd-4c36-b042-99b05e80619e",
					"name": "Create new account with no auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8e3a526-9774-4fc0-a9e5-0d4c20332279",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"'id' of the user is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"{{$timestamp}}@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "beaa4428-3ccf-456b-923a-9d6c4f4e3efd",
					"name": "Create user with already existing email with no auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fd4352e9-f85e-4665-9c02-bd8f4fc41aaf",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Error message 'Duplicate Entry' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Duplicate entry\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"opa@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0dd1d07f-d837-49f8-b880-3c87ebe85367",
					"name": "Create user with already existing email as active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c08271ab-8765-4813-bcd2-f0b965b51b55",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Error message 'Duplicate Entry' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Duplicate entry\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"opa@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "5a1352a2-8ee1-4f9d-9ee8-ad8f953c6368",
					"name": "Create user with already existing username with no auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e540339-c26c-4833-af5d-154d674bac2c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Error message 'Duplicate Entry' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Duplicate entry\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"act_alex\",\n    \"mail\": \"{{$timestamp}}@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "4ecf9577-9a1a-4975-9e7e-42e2afd0aaf1",
					"name": "Create user with already existing username as active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "24ec28dd-b146-49b6-92bb-41eed6f2ce1b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Error message 'Duplicate Entry' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Duplicate entry\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"act_alex\",\n    \"mail\": \"{{$timestamp}}@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "33410b01-15f4-41d3-aaef-f12960b5ba2d",
					"name": "Try to create user with valid data as an inactive admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e7ea6fc-7d64-416f-9f5f-061f5db636f5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message: 'No permissions!' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No permissions!\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"{{$timestamp}}@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b3f1c251-f55b-4b07-a88b-d4555b6073de",
					"name": "Try to create admin user as an inactive admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ef7f8787-5687-407d-8cbb-bc3ac052b711",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message: 'No permissions!' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No permissions!\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"{{$timestamp}}@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 1\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "075e5d25-e003-456a-9800-b82ae2dc3c36",
			"name": "Create Task",
			"item": [
				{
					"_postman_id": "2fb85e53-eeb4-4d54-bade-151d2657b4a5",
					"name": "QHTOD-T70 (1.0) [aUser] Create task with filled only one mandatory field (title) [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 404 Not Found'] = responseCode.code === 404;",
									"tests['Body is corect'] = data.message === \"You don not own list with id undefined\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n   \"task_title\": \"{{$randomInt}} title 128 {{$timestamp}}\"\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "2d29ae82-689f-4808-918c-683a7f769cbc",
					"name": "QHTOD-T69 (1.0) [aUser] Create task with filled only one mandatory field (list id) [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"Field 'task_title' doesn't have a default value\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n   \"task_in_list\": 128\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "398cfbd8-190b-466d-bfc0-ba07d8e4b6a8",
					"name": "QHTOD-T72 (1.0) [iUser] Create task with filled all mandatory fields (title and list id) [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDM6dGVzdDAwMDM="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"{{$randomInt}} title {{$timestamp}}\", \r\n   \"task_in_list\": 128\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d73848f7-31a4-412d-a955-b3489c893bfb",
					"name": "QHTOD-T61 (1.0) [aUser] Create task with filled all mandatory fields (title and list id) [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"{{$randomInt}} title {{$timestamp}}\", \r\n   \"task_in_list\": 128\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "9088c33f-73be-43cd-bd8f-3cb8372b8a56",
					"name": "QHTOD-T79 (1.0) [aUser] Create task with filled all mandatory and one optional field (status) [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"{{$randomInt}} title {{$timestamp}}\",\r\n   \"task_status\":\"Finished\", \r\n   \"task_in_list\": 128\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "ce919cb1-07a9-453f-aa4a-d2813398ebf2",
					"name": "QHTOD-T78 (1.0) [aUser] Create task with filled all mandatory and one optional field (description) [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"{{$randomInt}} title {{$timestamp}}\",\r\n   \"task_desc\":\"{{$randomInt}} description {{$timestamp}}\", \r\n   \"task_in_list\": 128\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "50f2cd5e-e4e0-4d90-8b78-ea7659f0adbc",
					"name": "QHTOD-T71 (1.0) [aUser] Create task with empty fields [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"\",\r\n   \"tasc_desc\":\"\",\r\n   \"tasac_status\":\"\",\r\n   \"task_in_list\": 128\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "dca29c86-daf0-4eb6-91d2-5b780dde6072",
					"name": "QHTOD-T74 (1.0) [aUser] Create tasks with same titles in one list [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Reques'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"Duplicate entry 'some tekst new-128' for key 'UC_Task_Name_Per_List'\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"some tekst new\", \r\n   \"task_in_list\": 128\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "14d02bbf-4d0b-458c-8f70-2931abb2ccdc",
					"name": "[noAuth] Create task with filled all mandatory fields (title and list id) [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Authorization required.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"{{$randomInt}} some tekst new {{$timestamp}}\", \r\n   \"task_in_list\": 127\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d3a8b2bd-8635-4e7f-9776-8106d8630f23",
					"name": "[aUser] Create task in a not shared list of another user [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 404 Not Found'] = responseCode.code === 404;",
									"tests['Body is corect'] = data.message === \"You don not own list with id 100\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"some tekst\",\r\n   \"task_in_list\": 100\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "56a1994c-816a-4913-8ef3-1f4cb39eb68d",
					"name": "[aUser] Create task with filled all mandatory and optional fields [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"{{$randomInt}} some tekst new {{$timestamp}}\",\r\n   \"task_desc\": \"task in list 127 user 581\",\r\n   \"task_status\":\"Not Started\",\r\n   \"task_in_list\": 127\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "2772cc57-bc7b-4374-b962-2414e2d6bb65",
					"name": "QHTOD-T76 (1.0) [aUser] Create tasks with different titles in one list [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"{{$randomInt}} some tekst new {{$timestamp}}\", \r\n   \"task_in_list\": 127\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "684a7a3e-d3f7-4743-846f-059ec4be5288",
			"name": "Create List",
			"item": [
				{
					"_postman_id": "1f114861-5452-4ab2-9e87-f0355a3be4a0",
					"name": "Create List with filled Title and filled Description as active user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5b29e98-d45e-4af0-a527-34691983a4f5",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"listID\", jsonData.list_id);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"List ID is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_id\");",
									"});",
									"",
									"",
									"",
									"pm.test(\"List owner ID is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_owner_user_id\");",
									"});",
									"",
									"pm.test(\"List title is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_title\");",
									"});",
									"",
									"",
									"pm.test(\"List description is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_description\");",
									"});",
									"",
									"",
									"",
									"pm.test(\"Status of the list is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_is_active\");",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"perfect10\",\n    \"list_description\" : \"short desc\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1c5bd962-42dd-489f-a234-5af689724747",
					"name": "Create List with filled Title and empty Description as active user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d5b0085-2c4f-4744-9f25-3c1b445e709b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"List ID is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_id\");",
									"});",
									"",
									"",
									"",
									"pm.test(\"List owner ID is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_owner_user_id\");",
									"});",
									"",
									"pm.test(\"List title is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_title\");",
									"});",
									"",
									"",
									"pm.test(\"List description is empty\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_description\");",
									"});",
									"",
									"",
									"",
									"pm.test(\"Status of the list is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_is_active\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"perfect10\",\n    \"list_description\": \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "4738a1a6-f6ca-4676-a4c8-52b25d6a5f51",
					"name": "Create List with empty Title and empty Description as active user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10504c59-79d4-4ae7-8607-cf6ad183f38f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message 'Invalid data.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid data.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "789c4056-f8db-4543-bfd4-6b7102bb6c69",
					"name": "Create List with an already existing Title with one of the logged in user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b4bf4aa5-4a8e-4917-84ca-4ce609fddba9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"The list is successfuly created\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"perfect10\",\n    \"list_description\" : \"short desc\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c9c1cfaf-8eee-4100-8321-6de76c329edc",
					"name": "Create List with an already existing Title of another user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "98fa62df-9dfc-4fdf-a1d0-5c1b4749d36e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"The list is successfuly created\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"dont DELETE\",\n    \"list_description\" : \"short desc\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "8aa01342-2fc1-4377-8770-952fd0feb8c6",
					"name": "Create List as a non-existing user (no auth)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19b66890-ff8a-4f28-ad0a-6cdfab039d25",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message 'Authorization required.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"test123\",\n    \"list_description\" : \"short desc\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "bfe8de86-1d67-4169-92dc-f8c0f9991b06",
					"name": "Create list as an inactive user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed4a42b7-cf23-4e0d-9627-19df1e9d4735",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message 'Account disabled' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "inact_alex",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"test123\",\n    \"list_description\" : \"short desc\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "700a3669-a5ec-4b45-9996-db0edd648573",
					"name": "Create List with empty Title and filled Description as an active user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a0bf707-f223-4e10-872e-894b65605403",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message 'Invalid data.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid data.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"\",\n    \"list_description\" : \"without title\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "f1a3c9d0-90a1-40ec-83ea-b86329bb9302",
			"name": "Update List",
			"item": [
				{
					"_postman_id": "a75c066f-9dd8-4cf0-b614-884a39a8fa43",
					"name": " QHTOD-T50 (1.0) [aUser] The list title is updated [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 400ms'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$randomInt}} new title\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"127"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1ec63bcb-94f1-4adc-a7d4-61766ef5b82d",
					"name": " QHTOD-T51 (1.0) [aUser] The list title is removed and left empty [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check the title of the list. It must be more than 1 symbol\";",
									"tests['Responese time is < 400ms'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"127"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d1bd019f-92fc-4a7b-a24e-cdfb8da321f0",
					"name": " QHTOD-T52 (1.0) [aUser] List description update of the logged user [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 400ms'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"listale322222x\",  \n    \"list_description\": \"{{$timestamp}} new desc\"  \n}"
						},
						"url": {
							"raw": "localhost:3000/lists/128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"128"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7e323db3-11a5-40d2-90d6-b907f847bb41",
					"name": " QHTOD-T53 (1.0) [aUser] The list title and description are updated at the same time [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 400ms'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$randomInt}} type here the new title\",\n    \"list_description\": \"type here the new description {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"127"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "2a8a0308-3694-43e3-89ba-9a47cb7dc1bb",
					"name": " QHTOD-T54 (1.0) [aUser] Removing a task from list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 400ms'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"listale322222x\",  \n    \"remove_task_id\":  267 \n}"
						},
						"url": {
							"raw": "localhost:3000/lists/128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"128"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "60ac5dcc-e660-4bd3-bad3-55d8b05cb11d",
					"name": " QHTOD-T56 (1.0) [aUser] Sharing a list with another inactive user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden'] = responseCode.code === 403;",
									"tests['Body is corect'] = data.message === \"You can't update this list.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"listale322222x {{$randomInt}}\",\n\t\"shared_with_user_id\" : 582\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/130",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"130"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "4b31503d-50f4-4225-9fa8-e63b15317508",
					"name": " QHTOD-T57 (1.0) [aAdmin] The list title of another active user is updated [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$randomInt}} listalex\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"127"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "2c76a346-e085-4a4a-87c7-7e67d3a2d6f5",
					"name": " QHTOD-T58 (1.0) [aAdmin] The list description of another active user is updated [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$randomInt}} listalex\",\n    \"list_description\": \"type here the new description {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"127"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "89ffb03d-f335-4110-8b21-af7d06e0ad82",
					"name": " QHTOD-T59 (1.0) [aAdmin] The list title and description of another active user are updated [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$randomInt}} listalex\",\n    \"list_description\": \"type here the new description {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/129",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"129"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "51d6e128-1db7-4309-a3f4-fbd3f79315d8",
					"name": " QHTOD-T60 (1.0) [aAdmin] A list's task of another active user is removed [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"listale322222x\",  \n    \"remove_task_id\": 265\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"128"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "623710f3-fbb9-4525-aad1-829845b8229b",
					"name": " QHTOD-T62 (1.0) [iAdmin] The list title of another active user is updated [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 400 Bad Request.'] = responseCode.code === 400;",
									"tests['Body is corect: You are inactive admin and you can not update anything.'] = data.message === \"You are inactive admin and you can't update anything.\";",
									"tests['Responese time is < 400ms.'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$timestamp}} title\" \n}"
						},
						"url": {
							"raw": "localhost:3000/lists/131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"131"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "642f2e49-3b3f-4aa7-b3fd-1254f4399f1b",
					"name": " QHTOD-T63 (1.0) [aUser] Update the list title of another active user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden.'] = responseCode.code === 403;",
									"tests['Body is corect: You can not update this list.'] = data.message === \"You can't update this list.\";",
									"tests['Responese time is < 400ms.'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$timestamp}}\" \n}"
						},
						"url": {
							"raw": "localhost:3000/lists/131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"131"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "8ecdd94f-d270-49e5-8bb6-8b956f9120d4",
					"name": " QHTOD-T64 (1.0) [aUser] Update the list description of another active user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden.'] = responseCode.code === 403;",
									"tests['Body is corect.'] = data.message === \"You can't update this list.\";",
									"tests['Responese time is < 400ms.'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"perfect10\",\n\t\"list_description\" : \"{{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"131"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "338bb958-96fd-4ef7-b7ef-5d62fd779dbe",
					"name": " QHTOD-T65 (1.0) [aUser] Delete a task from another user's list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden'] = responseCode.code === 403;",
									"tests['Body is corect'] = data.message === \"You can't update this list.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWN0X2FsZXg6cGFzc3dvcmQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"listale322222x\",  \n    \"remove_task_id\":  267\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"128"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "db590fba-ab30-4054-8ee0-8a112d3a2377",
					"name": " QHTOD-T66 (1.0) [iAdmin] The list description of another active user is updated [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 400 Bad Request.'] = responseCode.code === 400;",
									"tests['Body is corect: You are inactive admin and you can not update anything.'] = data.message === \"You are inactive admin and you can't update anything.\";",
									"tests['Responese time is < 400ms.'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$timestamp}} title\",\n\t\"list_description\" : \"{{$randomInt}} description\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"131"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "427850c2-2744-438e-8b23-cb3a02917266",
					"name": " QHTOD-T67 (1.0) [iAdmin] A task of another user's list is removed [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 400 Bad Request.'] = responseCode.code === 400;",
									"tests['Body is corect: You are inactive admin and you can not update anything.'] = data.message === \"You are inactive admin and you can't update anything.\";",
									"tests['Responese time is < 400ms.'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$timestamp}} title\",\n\t\"remove_task_id\" : 100\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"131"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "40b08570-588d-4449-8124-07e025a13547",
					"name": "QHTOD-T80 (1.0) [aUser] Share a list with two other active users in one call [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"Column count doesn't match value count at row 1\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"listale322222x {{$randomInt}}\" ,\n\t\"shared_with_user_id\": [434, 344]\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/130",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"130"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "a1be983e-ea3f-4570-bc2a-b7af25a8c136",
			"name": "Update User",
			"item": [
				{
					"_postman_id": "b4350a51-1e7f-4a69-9ec3-9ad2175eeddb",
					"name": "Update with username: test0002",
					"item": [
						{
							"_postman_id": "916f895c-5b70-46be-8d20-9c3d55e5cf9e",
							"name": "[aUser] Update first_name, surname, username with valid credentials and leave mail empty [N]",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"postman.getEnvironmentVariable(\"lists\");",
											"",
											"var data = JSON.parse(responseBody);",
											"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
											"tests['Body is corect'] = data.message === \"Duplicate entry '' for key 'mail_UNIQUE'\";",
											"tests['Responese time is < 200ms'] = responseTime < 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "password",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\" : \"ivansd\",\n\t\"surname\" : \"ivanovds\",\n\t\"username\" : \"test0002\",\n\t\"mail\" : \"\"\n}"
								},
								"url": {
									"raw": "localhost:3000/users",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "58dcb980-edab-44ca-932e-e6dc29327abf",
							"name": "[aUser] Update first_name and username [P] ",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"postman.getEnvironmentVariable(\"lists\");",
											"",
											"var data = JSON.parse(responseBody);",
											"tests['Status code is 200 OK'] = responseCode.code === 200;",
											"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
											"tests['Responese time is < 200ms'] = responseTime < 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "password",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\" : \"update f name\", \n\t\"username\" : \"test0002\" \n}"
								},
								"url": {
									"raw": "localhost:3000/users",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "45dd6ca1-0238-42cc-b065-bfdf3b942b32",
							"name": "[aUser] Update first_name, surname and username [P]",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"postman.getEnvironmentVariable(\"lists\");",
											"",
											"var data = JSON.parse(responseBody);",
											"tests['Status code is 200 OK'] = responseCode.code === 200;",
											"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
											"tests['Responese time is < 200ms'] = responseTime < 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "password",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\" : \"update f name\", \n\t\"surname\" : \"nekvo ime\",\n\t\"username\" : \"test0002\" \n}"
								},
								"url": {
									"raw": "localhost:3000/users",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "65445562-bc75-4fab-a880-50854d4b4769",
							"name": "[aUser] Update first_name, surname, username and mail with valid credentials [P] ",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"postman.getEnvironmentVariable(\"lists\");",
											"",
											"var data = JSON.parse(responseBody);",
											"tests['Status code is 200 OK'] = responseCode.code === 200;",
											"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
											"tests['Responese time is < 200ms'] = responseTime < 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "password",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\" : \"name\",\n\t\"surname\" : \"surname\",\n\t\"username\" : \"test0002\",\n\t\"mail\" : \"mail@abv.bg\"\n}"
								},
								"url": {
									"raw": "localhost:3000/users",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "10b80899-d2c3-43f5-b9e2-235685076242",
							"name": "[aUser] Update first_name, username and mail [P] ",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"postman.getEnvironmentVariable(\"lists\");",
											"",
											"var data = JSON.parse(responseBody);",
											"tests['Status code is 200 OK'] = responseCode.code === 200;",
											"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
											"tests['Responese time is < 200ms'] = responseTime < 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "password",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\" : \"update {{$randomInt}} name\", \n\t\"username\" : \"test0002\",\n\t\"mail\" : \"chikiriki{{$randomInt}}@mail.bg\"\n}"
								},
								"url": {
									"raw": "localhost:3000/users",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users"
									]
								}
							},
							"response": []
						}
					],
					"description": "Casese can be tasted with another username.",
					"_postman_isSubFolder": true
				},
				{
					"_postman_id": "bfa5f17c-9d6a-4750-8a6f-6e28a31b8678",
					"name": "[aUser] Leave first_name, surname, username and mail empty [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"\",\n\t\"surname\" : \"\",\n\t\"username\" : \"\",\n\t\"mail\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "36cbcb46-42e5-4242-bc32-701ca9be4a02",
					"name": "[aAdmin] Update of a specific user's first_name and surname [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\", \n\t\"surname\" : \"{{$randomInt}}newname\"  \n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=581",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "581"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "09190ed1-a877-4136-803a-b9df1dbe7c7d",
					"name": "[aUser] Update first_name, surname, mail with valid credentials and type invalid username (13 symbols) [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"update f name\", \n\t\"surname\" : \"nekvo ime\",\n\t\"username\" : \"test0002test0\" \n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "8b5c0ba6-0647-42a5-9f8a-2c0d0fdb2104",
					"name": "[aUser] Update first_name, surname, mail with valid credentials and type invalid username (2 symbols) [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"update f name\", \n\t\"surname\" : \"nekvo ime\",\n\t\"username\" : \"te\" \n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "ef50ea42-fa90-4f74-8702-4fa3df995d03",
					"name": "[aUser] Update first_name, surname with credentials and type invalid username (13 symbols) and mail (empty mail) [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"update f name\", \n\t\"surname\" : \"nekvo ime\",\n\t\"username\" : \"test0002test0\",\n\t\"mail\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "27fd183f-6a08-4b39-88d7-f3f32d221132",
					"name": "[aUser] Update first_name, surname with credentials and type invalid username (2 symbols) and mail (empty mail) [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"update f name\", \n\t\"surname\" : \"nekvo ime\",\n\t\"username\" : \"te\",\n\t\"mail\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "29467451-6d66-4f64-a634-aff0fd5cd70a",
					"name": "[aUser] Update first_name and mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"mail\" : \"{{$randomInt}}meil@dir.bg\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "3f22d60b-8e8a-4c65-87e2-6c615fc2b5cb",
					"name": "[aUser] Update first_name and surname [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"surname\" : \"{{$randomInt}} maaan\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "54b1e53e-9848-4972-8c4b-904b800e211f",
					"name": "[aAdmin] Update of a specific user's first_name, surname and mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 589 and username: test0007 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"surname\" : \"{{$randomInt}} family\",\n\t\"mail\" : \"ico@{{$randomInt}}.hazard\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=589",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "589"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b2838462-a73f-443c-a1c9-929485eb6b3a",
					"name": "[aAdmin] Update of a specific user's first_name and mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\", \n\t\"mail\" : \"{{$randomInt}}newmail@bbg.bg\"  \n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=581",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "581"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "59b3dd2f-0f88-4524-ad69-76fceee09ec6",
					"name": "[aAdmin] Update of a specific user's first_name, surname and username [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Duplicate entry '' for key 'mail_UNIQUE'\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"surname\" : \"{{$randomInt}} family\",\n\t\"username\" : \"{{$randomInt}}.hazard\" \n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "e78127fe-500e-4d4a-b6c7-276cff990b98",
					"name": "[aUser] Update first_name, surname, mail with valid credentials and leave username empty [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"surname\" : \"{{$randomInt}} maaan\",\n\t\"mail\" : \"{{$randomInt}}newmail@bbg.bg\",\n\t\"username\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c6ffa89a-5398-4e80-a9e0-46e909c6622b",
					"name": "[aAdmin] Update of a specific user's first_name and username [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Account with ID: 585 and username: test0006 is updated sucessfully.\";",
									"tests['Responese time is < 250ms'] = responseTime < 250;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\", \n\t\"username\" : \"userN {{$randomInt}}\"  \n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7625bed6-c456-4ec8-ae95-5321a23d2e19",
					"name": "[iAdmin] Update a specific user's first_name, surname, username and mail [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"You are inactive admin and you can't update anything.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"surname\" : \"{{$randomInt}} maaan\",\n\t\"mail\" : \"{{$randomInt}}newmail@bbg.bg\",\n\t\"username\" : \"test0022\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=581",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "581"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b193f96d-382d-480d-a216-d99846aa42a4",
					"name": "[aUser] Update first_name, surname and mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"surname\" : \"{{$randomInt}} maaan\",\n\t\"mail\" : \"{{$randomInt}}newmail@bbg.bg\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "85c8c0b8-99e2-4eb5-9b7a-c56ec6b10411",
					"name": "[aAdmin] Update of a specific user's first_name, surname, mail with valid credentials and leave username empty [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"surname\" : \"{{$randomInt}} family\",\n\t\"username\" : \"\",\n\t\"mail\" : \"dsd@{{$randomInt}}.hazard\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "8f2a2e0b-5841-4ad4-8814-7e65d93820eb",
					"name": "[aAdmin] Update of a specific user's first_name, surname and username and leave mail field empty [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"Duplicate entry '' for key 'mail_UNIQUE'\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"surname\" : \"{{$randomInt}} family\",\n\t\"username\" : \"{{$randomInt}}.hazard\",\n\t\"mail\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "8f1ab6ea-b25f-454b-9d96-c35bc1bffa43",
					"name": "[aAdmin] Update of a specific user's first_name [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 589 and username: test0007 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\" \n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=589",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "589"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d6890cba-b16f-4ff6-b481-202ed5584393",
					"name": " QHTOD-T117 (1.0) [aAdmin] Update of a specific user's surname, username and mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"surname\" : \"{{$randomInt}} name\",\n\t\"username\" : \"nameN {{$randomInt}}32\",\n\t\"mail\" : \"fsdfds{{$randomInt}}@d.ww\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "09eff5ed-b451-424f-89b0-18cab7408d0f",
					"name": " QHTOD-T125 (1.0) [aUser] Update of a specific user's first_name, surname, username and mail with empty fields [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"\",\n\t\"surname\" : \"\",\n\t\"username\" : \"\",\n\t\"mail\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "29188b3f-1f2b-49f1-bb2b-db3b9822818b",
					"name": " QHTOD-T121 (1.0) [aAdmin] Update of a specific user's first_name, surname, mail with valid credentials and type invalid username (2 symbols) [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"fdsfsdf{{$randomInt}}\",\n\t\"surname\" : \"dsfsdf{{$timestamp}}\",\n\t\"username\" : \"us\",\n\t\"mail\" : \"fdsfsdfs\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "64fd6baf-8a7d-4de9-bc4f-cee9004d6337",
					"name": " QHTOD-T122 (1.0) [aAdmin] Update of a specific user's first_name, surname, mail with valid credentials and type invalid username (13 symbols) [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"surname\" : \"{{$randomInt}} family\",\n\t\"username\" : \"1234567890000\",\n\t\"mail\" : \"dsd@{{$randomInt}}.hazard\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "edd1c7a0-3d5c-4653-8368-28d36a30dd0a",
					"name": " QHTOD-T118 (1.0) [aAdmin] Update of a specific user's first_name, surname, username and mail with valid credentials [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"fdsfsdf{{$randomInt}}\",\n\t\"surname\" : \"dsfsdf{{$timestamp}}\",\n\t\"username\" : \"user{{$randomInt}}\",\n\t\"mail\" : \"fdsfsdfs\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0812890a-06ef-4eae-ac6c-e7d2681be3db",
					"name": " QHTOD-T124 (1.0) [aAdmin] Update of a specific user's first_name, surname with credentials and type invalid username (13 symbols) and mail (empty mail) [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"fdsfsdf{{$randomInt}}\",\n\t\"surname\" : \"dsfsdf{{$timestamp}}\",\n\t\"username\" : \"user{{$randomInt}}use{{$randomInt}}\",\n\t\"mail\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "dc78600e-1bbf-4608-beb2-bffdd5779381",
					"name": " QHTOD-T112 (1.0) [aAdmin] Update of a specific user's surname and mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"surname\" : \"{{$randomInt}} name\",\n\t\"mail\" : \"meil{{$randomInt}}@ff.ff\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=581",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "581"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "5bda883e-e615-4645-80c8-a5f1049b50a7",
					"name": " QHTOD-T105 (1.0) [aAdmin] Update of a specific user's surname [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"surname\" : \"{{$randomInt}} name\" \n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=581",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "581"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c15b6616-dd9e-4107-9a25-9bf435a1ebee",
					"name": " QHTOD-T111 (1.0) [aAdmin] Update of a specific user's surname and username [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"surname\" : \"{{$randomInt}} name\",\n\t\"username\" : \"nameN {{$randomInt}}32\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a012f741-7dd7-4ea3-aefc-51a9b3880c97",
					"name": " QHTOD-T106 (1.0) [aAdmin] Update of a specific user's mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"mail\" : \"meil{{$randomInt}}@ff.ff\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=581",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "581"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1e265c1e-ec80-4bd3-8d97-aab7ea259fb8",
					"name": " QHTOD-T123 (1.0) [aAdmin] Update of a specific user's first_name, surname with credentials and type invalid username (2 symbols) and mail (empty mail) [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"fdsfsdf{{$randomInt}}\",\n\t\"surname\" : \"dsfsdf{{$timestamp}}\",\n\t\"username\" : \"us\",\n\t\"mail\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b4dbca0c-a3ad-4c4a-b796-b0faa6a16aea",
					"name": " QHTOD-T116 (1.0) [aAdmin] Update of a specific user's first_name, username and mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"fdsfsdf{{$randomInt}}\", \n\t\"username\" : \"userN{{$randomInt}}\",\n\t\"mail\" : \"meil{{$randomInt}}@ff.ff\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "640fd0c5-7d49-4f36-a2ce-ab24c73adbd2",
					"name": " QHTOD-T107 (1.0) [aAdmin] Update of a specific user's username [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"nameN {{$randomInt}}32\"  \n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "446c78fd-a6ae-4117-91eb-300356f0a4c3",
					"name": " QHTOD-T113 (1.0) [aAdmin] Update of a specific user's username and mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"nameN {{$randomInt}}32\",\n\t\"mail\" : \"fsdfds{{$randomInt}}@d.ww\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d607a231-ba44-4e47-ada6-2fef35baa486",
					"name": " QHTOD-T84 (1.0) [aUser] Update only mail with valid credentials [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"mail\" : \"nameN@{{$randomInt}}32.bg\"  \n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "ead2314a-caad-43c2-8521-a1783feb6a22",
					"name": " QHTOD-T156 (1.0) [iUser] Update first_name, surname, username and mail [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"You are inactive user and you can't update anything.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDM6dGVzdDAwMDM="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\": \"gosho N {{$randomInt}}\",\n\t\"surname\" : \"surname N {{$randomInt\",\n\t\"username\" : \"nameN {{$randomInt}}32\",\n\t\"mail\" :\"dsadasdas@dad.dd\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "ecdaf166-48d1-4af5-9ee7-8e05622f756e",
					"name": " QHTOD-T90 (1.0) [aUser] Update surname and mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"surname\":\"Ivanchov {{$randomInt}}\",\n\t\"mail\" : \"nameN@{{$randomInt}}32.bg\"  \n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "4d21178c-d5e0-4886-99d8-49f807f1ba63",
					"name": " QHTOD-T83 (1.0) [aUser] Update only surname [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"surname\" : \"Ivanov {{$randomInt}}32.bg\"  \n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "5b8b7383-d70a-4d85-a164-a373c6879afe",
					"name": " QHTOD-T82 (1.0) [aUser] Update only first_name [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"nameN {{$randomInt}}32\"  \n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "2a52f3e4-5222-4121-b1c6-28505f52f0f9",
			"name": "Update List",
			"item": [
				{
					"_postman_id": "eca8fdb8-8fa7-4fa7-9619-b6f66f28091d",
					"name": " QHTOD-T50 (1.0) [aUser] The list title is updated [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 400ms'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$randomInt}} new title\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"127"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "e4fcd23d-dda7-4de4-b721-b0be79dc8b4b",
					"name": " QHTOD-T51 (1.0) [aUser] The list title is removed and left empty [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check the title of the list. It must be more than 1 symbol\";",
									"tests['Responese time is < 400ms'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"127"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "22bff0b2-3bd0-4cf9-8dc4-3ea829852890",
					"name": " QHTOD-T52 (1.0) [aUser] List description update of the logged user [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 400ms'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"listale322222x\",  \n    \"list_description\": \"{{$timestamp}} new desc\"  \n}"
						},
						"url": {
							"raw": "localhost:3000/lists/128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"128"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "dd21e374-2688-430c-baf5-16b5f16314a9",
					"name": " QHTOD-T53 (1.0) [aUser] The list title and description are updated at the same time [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 400ms'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$randomInt}} type here the new title\",\n    \"list_description\": \"type here the new description {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"127"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "2eb65018-32c8-4f8b-8a17-438f4138efd5",
					"name": " QHTOD-T54 (1.0) [aUser] Removing a task from list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 400ms'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"listale322222x\",  \n    \"remove_task_id\":  267 \n}"
						},
						"url": {
							"raw": "localhost:3000/lists/128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"128"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "71a9841d-0905-4732-9e3e-aade9fe0f2b1",
					"name": " QHTOD-T56 (1.0) [aUser] Sharing a list with another inactive user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden'] = responseCode.code === 403;",
									"tests['Body is corect'] = data.message === \"You can't update this list.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"listale322222x {{$randomInt}}\",\n\t\"shared_with_user_id\" : 582\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/130",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"130"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "95607c01-ac9f-4394-bd58-bec7dea646a5",
					"name": " QHTOD-T57 (1.0) [aAdmin] The list title of another active user is updated [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$randomInt}} listalex\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"127"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a1b8d048-aefb-483c-9a67-b1851894a506",
					"name": " QHTOD-T58 (1.0) [aAdmin] The list description of another active user is updated [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$randomInt}} listalex\",\n    \"list_description\": \"type here the new description {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"127"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7dc4b245-4ee1-4b33-9f5f-b1531da15d56",
					"name": " QHTOD-T59 (1.0) [aAdmin] The list title and description of another active user are updated [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$randomInt}} listalex\",\n    \"list_description\": \"type here the new description {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/129",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"129"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0f12783b-f9d7-446c-bfbe-c2f83f46c883",
					"name": " QHTOD-T60 (1.0) [aAdmin] A list's task of another active user is removed [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"listale322222x\",  \n    \"remove_task_id\": 265\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"128"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "73173f6b-f8ca-4268-8c01-0e7101ab023c",
					"name": " QHTOD-T62 (1.0) [iAdmin] The list title of another active user is updated [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 400 Bad Request.'] = responseCode.code === 400;",
									"tests['Body is corect: You are inactive admin and you can not update anything.'] = data.message === \"You are inactive admin and you can't update anything.\";",
									"tests['Responese time is < 400ms.'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$timestamp}} title\" \n}"
						},
						"url": {
							"raw": "localhost:3000/lists/131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"131"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "63ffd184-65a7-43fc-bcdf-459496a29e0d",
					"name": " QHTOD-T63 (1.0) [aUser] Update the list title of another active user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden.'] = responseCode.code === 403;",
									"tests['Body is corect: You can not update this list.'] = data.message === \"You can't update this list.\";",
									"tests['Responese time is < 400ms.'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$timestamp}}\" \n}"
						},
						"url": {
							"raw": "localhost:3000/lists/131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"131"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "77923688-1288-47ce-98db-fa77298c1e72",
					"name": " QHTOD-T64 (1.0) [aUser] Update the list description of another active user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden.'] = responseCode.code === 403;",
									"tests['Body is corect.'] = data.message === \"You can't update this list.\";",
									"tests['Responese time is < 400ms.'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"perfect10\",\n\t\"list_description\" : \"{{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"131"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "2783a628-7bd1-4491-8675-17efc51f5c19",
					"name": " QHTOD-T65 (1.0) [aUser] Delete a task from another user's list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden'] = responseCode.code === 403;",
									"tests['Body is corect'] = data.message === \"You can't update this list.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWN0X2FsZXg6cGFzc3dvcmQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"listale322222x\",  \n    \"remove_task_id\":  267\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"128"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "3ccce706-3e01-464a-9a86-0da0133c4aac",
					"name": " QHTOD-T66 (1.0) [iAdmin] The list description of another active user is updated [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 400 Bad Request.'] = responseCode.code === 400;",
									"tests['Body is corect: You are inactive admin and you can not update anything.'] = data.message === \"You are inactive admin and you can't update anything.\";",
									"tests['Responese time is < 400ms.'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$timestamp}} title\",\n\t\"list_description\" : \"{{$randomInt}} description\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"131"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c09e8b1a-f0ef-43bb-82ed-d22ce40c1b21",
					"name": " QHTOD-T67 (1.0) [iAdmin] A task of another user's list is removed [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 400 Bad Request.'] = responseCode.code === 400;",
									"tests['Body is corect: You are inactive admin and you can not update anything.'] = data.message === \"You are inactive admin and you can't update anything.\";",
									"tests['Responese time is < 400ms.'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$timestamp}} title\",\n\t\"remove_task_id\" : 100\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"131"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1623dc16-8858-435d-ae67-361997bbf58c",
					"name": "QHTOD-T80 (1.0) [aUser] Share a list with two other active users in one call [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"Column count doesn't match value count at row 1\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"listale322222x {{$randomInt}}\" ,\n\t\"shared_with_user_id\": [434, 344]\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/130",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"130"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "8b8b278e-1be6-438e-8d7d-379ded3e2b44",
			"name": "Update Task",
			"item": [
				{
					"_postman_id": "4b50acc8-8140-46fd-bdff-861eaea25592",
					"name": " QHTOD-T197 (1.0) [aAdmin] Update another user's task description with no symbols [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Task with task_title: 787 some tekst new 1532506527 ,task_description:  and task_status: Not Started of list 127 is sucessfully updated.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_desc\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=393",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "393"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7fe2188a-5c98-41dc-bc6a-1c3dc8fb3b72",
					"name": " QHTOD-T198 (1.0) [aAdmin] Update another user's task status with valid data [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Task with task_title: 814 title 1532507361 ,task_description: null and task_status: In Progress of list 128 is sucessfully updated.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_status\" : \"In Progress\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=394",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "394"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "759b92de-2213-43c2-99b5-773c59b98ca3",
					"name": " QHTOD-T194 (1.0) [aAdmin] Update another user's task title [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Task with task_title: 752 tasck title ,task_description: null and task_status: Finished of list 128 is sucessfully updated.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} tasck title\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=413",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "413"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "5055393e-f7aa-4544-ba36-ca32408ae0e3",
					"name": " QHTOD-T204 (1.0) [aAdmin] Update own task title, description and status [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Task with task_title: 752 tasck title ,task_description: null and task_status: Finished of list 128 is sucessfully updated.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_desc\" : \"{{$randomInt}} task desc\",\n\t\"task_status\" : \"In Progress\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=418",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "418"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0e9882c4-b15f-4eb7-97eb-6b31995343d5",
					"name": " QHTOD-T203 (1.0) [aAdmin] Update the status of the task with invalid data of another user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_desc\" : \"{{$randomInt}} task desc\",\n\t\"task_status\" : \"test\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": "with status \"test\""
					},
					"response": []
				},
				{
					"_postman_id": "c1f6e0b9-5cef-4d18-a7aa-2d07fd4da9f8",
					"name": " QHTOD-T203 (1.0) [aAdmin] Update the status of the task with invalid data of another user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_desc\" : \"{{$randomInt}} task desc\",\n\t\"task_status\" : \"2\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": "with status \"2\""
					},
					"response": []
				},
				{
					"_postman_id": "3c743149-4d64-4148-8b34-7aa930dc5d64",
					"name": " QHTOD-T200 (1.0) [aAdmin] Update the task description and status of another user [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_desc\" : \"{{$randomInt}} task desc\",\n\t\"task_status\" : \"Finished\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=416",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "416"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "cc1eb5a5-9510-4da4-8bcd-ab7f823f40ea",
					"name": " QHTOD-T196 (1.0) [aAdmin] Update the task description of another user [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_desc\" : \"{{$randomInt}} task desc\" \n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=414",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "414"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "495f067f-8bb5-466d-b735-263449c2a3e3",
					"name": " QHTOD-T195 (1.0) [aAdmin] Update the task title and description of another user [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_desc\" : \"{{$randomInt}} task desc\" \n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=414",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "414"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "36ea37ad-dcb8-42ad-be15-cb5b8354520a",
					"name": " QHTOD-T199 (1.0) [aAdmin] Update the task title and status of another user [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_status\" : \"In Progress\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=411",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "411"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "75f04a3c-20c6-44ac-a01c-59c22da235b9",
					"name": " QHTOD-T201 (1.0) [aAdmin] Update the task title, description and status of another user [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_desc\" : \"{{$randomInt}} task desc\",\n\t\"task_status\" : \"Not Started\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=411",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "411"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "a5995ad2-5ea1-4045-ac60-f0b5547986d5",
					"name": " QHTOD-T202 (1.0) [aAdmin] Update the the task title with no symbols \"\" of another user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data for task title. It must be at least 1 symbol\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"\" \n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=411",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "411"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "f1825931-77dc-4d6a-980e-0558f0a5485f",
					"name": " QHTOD-T184 (1.0) [aUser] Update only task status with valid data [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data. Check input data for task title. It must be at least 1 symbol\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_status\" : \"Not Started\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=413",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "413"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "995f8b33-cb28-45da-b51d-9e75a4b37ab6",
					"name": " QHTOD-T182 (1.0) [aUser] Update only the task description [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data. Check input data for task title. It must be at least 1 symbol\";",
									"tests['Responese time is < 250ms'] = responseTime < 250;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_desc\" : \"{{$randomInt}} Not Started\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=413",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "413"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "ec9d6bfb-d2ac-477d-aeb7-f590552fff95",
					"name": " QHTOD-T183 (1.0) [aUser] Update only the task description with no symbols \"\" [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data. Check input data for task title. It must be at least 1 symbol\";",
									"tests['Responese time is < 250ms'] = responseTime < 250;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_desc\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=413",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "413"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "5dee08e9-675e-4afa-b89e-713bef8a880e",
					"name": " QHTOD-T180 (1.0) [aUser] Update only the task title [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data. Check input data for task title. It must be at least 1 symbol\";",
									"tests['Responese time is < 250ms'] = responseTime < 250;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=413",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "413"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "e5ef805a-8af0-4543-a52e-f23c5137337b",
					"name": " QHTOD-T189 (1.0) [aUser] Update the status of the task with invalid data [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 250ms'] = responseTime < 250;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_status\" : \"{{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=413",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "413"
								}
							]
						},
						"description": " with {{$timestamp}}"
					},
					"response": []
				},
				{
					"_postman_id": "29c24179-30a9-48f1-9812-141bcf326bad",
					"name": " QHTOD-T189 (1.0) [aUser] Update the status of the task with invalid data [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 250ms'] = responseTime < 250;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_status\" : \"0\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=413",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "413"
								}
							]
						},
						"description": " with \"0\""
					},
					"response": []
				},
				{
					"_postman_id": "325997e4-2203-4b7b-aebd-19cc27780f56",
					"name": " QHTOD-T186 (1.0) [aUser] Update the task description and status [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 400ms'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_desc\" : \"{{$randomInt}} Not Started\",\n\t\"task_status\" : \"In Progress\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=413",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "413"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "5a848859-a906-43ab-84d7-2464bd41ee37",
					"name": " QHTOD-T190 (1.0) [aUser] Update the task title and description of another user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"Task with ID:421 doesn't belong to this user\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_desc\" : \"{{$randomInt}} task desc\" \n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=421",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "421"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "27e46d77-cdf3-469f-ac50-58b5b2665d06",
					"name": " QHTOD-T181 (1.0) [aUser] Update the task title and description [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 ОК'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Task with ID:421 doesn't belong to this user\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_desc\" : \"{{$randomInt}} task desc\" \n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "a1ecd711-4001-4f8e-ba5c-ea902b1a56b7",
					"name": " QHTOD-T185 (1.0) [aUser] Update the task title and status [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 ОК'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Task with ID:421 doesn't belong to this user\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_status\" : \"Not Started\" \n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "f1e46d76-2399-4f36-89ec-aac56be04b9a",
					"name": " QHTOD-T187 (1.0) [aUser] Update the task title, description and status [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 ОК'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Task with ID:421 doesn't belong to this user\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_desc\" : \"{{$randomInt}} task desc\",\n\t\"task_status\" : \"Finished\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "9482fd7b-4668-426a-858b-397ecbb101ec",
					"name": " QHTOD-T188 (1.0) [aUser] Update the the task title with no symbols \"\" [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data for task title. It must be at least 1 symbol\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "b67e02be-690c-49c3-b896-9fa08c2a1d19",
					"name": " QHTOD-T205 (1.0) [iAdmin] Update the task title, description and status of another user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"You are inactive admin and you can't update anything.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_desc\" : \"{{$randomInt}} task desc\",\n\t\"task_status\" : \"Finished\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "5857cb85-1ffa-4812-81e6-4b1ea71400ca",
					"name": " QHTOD-T191 (1.0) [iUser] Update task title and desription [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data for task title. It must be at least 1 symbol\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDM6dGVzdDAwMDM="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"\" \n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "590393cf-6629-4fc7-9276-a4d6fc2374a0",
					"name": " QHTOD-T192 (1.0) [iUser] Update the task title and description of another user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad REquest'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"You are inactive user and you can't update anything.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDM6dGVzdDAwMDM="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$timestamp}} random user\",\n\t\"task_desc\" : \"{{$randomInt}} msg\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "882953ab-7a15-4edb-9358-03d44b374718",
					"name": " QHTOD-T193 (1.0) [noAuth] Update the task title and description of another user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Unauthorized users can't update user information\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDM6dGVzdDAwMDM=",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$timestamp}} random user\",\n\t\"task_desc\" : \"{{$randomInt}} msg\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": " "
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "40c38fb7-6406-4e80-82d5-4140d87bb488",
			"name": "Delete List (Choose the right environment)",
			"item": [
				{
					"_postman_id": "7d45f1f3-f7f7-4f53-811a-caaa70e740a9",
					"name": "Execute to get the new list id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f1c195a3-50e4-4457-a988-ba8331432e08",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"deleteListID\", data[0].list_id);"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"perfect10\",\n    \"list_description\" : \"short desc\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								""
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1f3c88a6-d1a5-42ec-b6b6-fc2ae1e80d75",
					"name": "QHTOD - 142 [aUser] Delete his own list [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7adf78eb-0cc0-496d-b89e-407d9a4fd4b3",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"'Message: List is successfully deleted.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is successfully deleted.\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id={{deleteListID}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "{{deleteListID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1c0e7237-59b0-4d4b-a702-0c89dd71d578",
					"name": "QHTOD - 143 [aUser] Try to delete list of another user [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4114033e-6914-439f-a776-a9bc5b5d24dc",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Message: You do not own list with id... is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"You do not own list with id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "3a606fcd-519a-4c04-a927-7ff2d247062b",
					"name": "QHTOD - 144 [iUser] Try to delete his own list [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d5195eb-3d78-40cc-8891-441eb5c95d85",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"'Message: Account disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inact_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "131"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a3553bdf-0f08-4037-bc3c-87904eabb463",
					"name": "QHTOD - 147 [iUser] Try to delete list of another user [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8efcca33-351b-441a-a78f-16c17f0ecdf0",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"'Message: Account disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inact_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=114",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "114"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0f283a3d-0eaf-490a-a1df-2fe6bb5e399d",
					"name": "Execute to get the new list id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a7d7d891-a7c3-4227-9d57-9bcb35696eb2",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"deleteListID2\", data[0].list_id);"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"perfect10\",\n    \"list_description\" : \"short desc\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								""
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1882ef4f-2ace-4057-8e41-e4f391a6b7b7",
					"name": "QHTOD - 148 [aAdmin] Delete his own list [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c4b41b01-ba69-415d-b951-9a0792275774",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"'Message: List 19 is successfully deleted.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is successfully deleted.\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id={{deleteListID2}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "{{deleteListID2}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a4ea359a-1720-426c-bd1f-288303947946",
					"name": "Execute to get the new list id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "209da117-286d-4e0c-9add-c1f36c54b920",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"deleteListID3\", data[0].list_id);"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"perfect10\",\n    \"list_description\" : \"short desc\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								""
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "903b7919-c39b-438b-8783-4e410ebc36e6",
					"name": "QHTOD - 149 [aAdmin] Delete list of another user [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "787ecd6b-1003-47be-8adf-6104bad62ea4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"'is successfully deleted.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is successfully deleted.\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id={{deleteListID3}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "{{deleteListID3}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "e3e1a13a-d79b-4e05-9aa5-ff8797ee053e",
					"name": "QHTOD - 152 [iAdmin] Delete his own list [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9145d5a2-ba4d-4537-a078-580a76334df8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account disabled' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=129",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "129"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "de04c056-11b0-4687-8096-0bee99665a3e",
					"name": "QHTOD - 153 [iAdmin] Try to delete list of another user [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e67563f9-03e4-4e64-8edb-a76b3a1edfd4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account disabled' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=130",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "130"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "fe270679-206a-49ed-8094-7355c412610f",
					"name": "QHTOD - 154 [noAuth] Try to delete list [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b387540c-ef88-4a8e-b314-9dff7f8f0fa6",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Authorization required.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=114",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "114"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "356a8694-aa7e-4fc0-a1bf-6d6e39a77d7d",
			"name": "Delete Task",
			"item": [
				{
					"_postman_id": "361d85b2-09c3-4015-9dd9-e0bf707b37bb",
					"name": " W QHTOD-T207 (1.0) [aUser] Delete a task from own list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Task 181 'some tekst 977' in list 127 '459 listalex' is successfully deleted.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=181",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "181"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "bcd5b06b-ff0d-43d2-8cf6-149cc594dd3d",
					"name": "W QHTOD-T213 (1.0) [aAdmin] Delete a task from your own list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Task 263 '858 some tekst new 1532069776' in list 127 '459 listalex' is successfully deleted.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=263",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "263"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "28c44122-077c-4e75-8b19-fdf2535cde8a",
					"name": "W  QHTOD-T215 (1.0) [aAdmin] Delete a task from shared list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Task 269 '858 some tekst new 1532069776' in list 127 '459 listalex' is successfully deleted.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=269",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "269"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b513e401-1dc5-42c2-9cd3-355f655d4542",
					"name": " QHTOD-T208 (1.0) [aUser] Delete a task from another user's list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 404 Not Found'] = responseCode.code === 404;",
									"tests['Body is corect'] = data.message === \"Task 128 does not exist!\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1a10f52e-fe4c-4a6e-abc6-071b9439197b",
					"name": " QHTOD-T209 (1.0) [aUser] Delete a task from shared list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 403 Forbidden'] = responseCode.code === 403;",
									"tests['Body is corect'] = data.message === \"Task 233 is in a shared list.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=233",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "233"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "dacc8e54-5a4d-408f-b908-271781fab658",
					"name": " QHTOD-T214 (1.0) [aAdmin] Delete a task from another user's list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Task 110 was already deleted!\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=110",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "110"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "9dc4d4ea-a4a1-4753-b1bd-5e458731e80f",
					"name": " QHTOD-T216 (1.0) [iAdmin] Delete a task from own list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7242d07c-b2c7-47cf-8440-b802033a9f49",
					"name": " QHTOD-T217 (1.0) [iAdmin] Delete a task from another user's list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=211",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "211"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d8de1c6c-f5ae-4865-a1c1-2f65bef4a5fe",
					"name": " QHTOD-T218 (1.0) [iAdmin] Delete a task from shared list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=101",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "101"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7bdaffb2-61f1-4b2c-85e5-cb13b3610133",
					"name": " QHTOD-T219 (1.0) [noAuth] Delete a task from a random user's list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Authorization required.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ=",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=101",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "101"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "adfb53d0-8712-4381-a0e1-58897cc1f7f5",
					"name": " QHTOD-T220 (1.0) [aUser] Try to delete a task which is already deleted [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Task 229 was already deleted!\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=229",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "229"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "ef2682b2-8f2f-4fb5-9f59-e876a14f3d86",
					"name": " QHTOD-T221 (1.0) [aAdmin] Try to delete your own task which is already deleted [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Task 114 was already deleted!\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=114",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "114"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "79f4cc08-8d8b-493d-b9f5-ab92e124ae10",
					"name": " QHTOD-T222 (1.0) [aAdmin] Try to delete another user's task which is already deleted [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Task 110 was already deleted!\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=110",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "110"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c524c98c-c8da-4454-8106-acc9a6f06184",
					"name": " QHTOD-T210 (1.0) [iUser] Delete a task from another user's list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDM6dGVzdDAwMDM="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=101",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "101"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "92d1fd95-17a9-4d1c-9702-24f88a2aab7d",
					"name": " QHTOD-T212 (1.0) [iUser] Delete a task from shared list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDM6dGVzdDAwMDM="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=94",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "94"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "64fa06bc-d760-4dcf-8bae-b50eb399f235",
					"name": " QHTOD-T211 (1.0) [iUser] Delete a task from your own list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDM6dGVzdDAwMDM="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=263",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "263"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "979ce169-8fba-490e-9a25-ca4420e39f8b",
			"name": "Delete User",
			"item": [
				{
					"_postman_id": "7b0b4070-3e6f-42fb-b18c-ab7729248eb4",
					"name": "Create user with unique username and mail as active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c22b4e27-52e8-4a87-855f-0130e350a816",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"'id' of the user is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"deleteAdminByID\", data.id);"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"{{$timestamp}}@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 1\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						},
						"description": "Create user with unique username and mail."
					},
					"response": []
				},
				{
					"_postman_id": "bc9d2891-82de-44e3-adf0-0c7dce1e6d7a",
					"name": " QHTOD-T226 (1.0) [aAdmin] Delete an active admin by user ID [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "378123f9-ea13-4913-85bf-5cb9be61532f",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is successfully deleted.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?user_id={{deleteAdminByID}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{deleteAdminByID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "ea632ce3-d5f3-48bb-b998-7f322daa678f",
					"name": "Create user with unique username and mail as active user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2e92cd47-be4d-447e-8d29-4375c7b6d244",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"'id' of the user is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"deleteUserByID\", data.id);"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"{{$timestamp}}@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						},
						"description": "Create user with unique username and mail."
					},
					"response": []
				},
				{
					"_postman_id": "109691d0-a410-4506-9252-38be47942114",
					"name": " QHTOD-T223 (1.0) [aAdmin] Delete a user by user ID [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "23f0dd62-52c3-45f9-87f4-62a993e3fd62",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is successfully deleted.\");",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?user_id={{deleteUserByID}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{deleteUserByID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1eea8e6c-55f7-42d0-aec3-566f04a90488",
					"name": " QHTOD-T231 (1.0) [aAdmin] Delete your own account by mail [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "381bca52-0108-4630-8ec8-ff66457840bd",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Returned message is correct'] = data.message === \"Action denied! Self-destruct is against the basic humanity! Go reproduce you self\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?mail=nameN@532.bg",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "mail",
									"value": "nameN@532.bg"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a8a03238-c798-466d-83bc-d3837f26fec6",
					"name": " QHTOD-T229 (1.0) [aAdmin] Delete your own account by user ID [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "381bca52-0108-4630-8ec8-ff66457840bd",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Returned message is correct'] = data.message === \"Action denied! Self-destruct is against the basic humanity! Go reproduce you self\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?user_id=580",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "580"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "eae4724e-f4c6-45e3-93f4-3ae82691b214",
					"name": " QHTOD-T230 (1.0) [aAdmin] Delete your own account by username [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "381bca52-0108-4630-8ec8-ff66457840bd",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Returned message is correct'] = data.message === \"Action denied! Self-destruct is against the basic humanity! Go reproduce you self\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?username=test0001",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "test0001"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "80532b7b-9b11-43ab-9e31-4abd94b1076b",
					"name": " QHTOD-T235 (1.0) [aUser] Delete a user by mail [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a15d1cdc-53a8-4364-9db7-8e33c4661f92",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden'] = responseCode.code === 403;",
									"tests['Returned message is correct'] = data.message === \"You don't have permissions to delete users.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?mail=1532595346@abv.bg",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "mail",
									"value": "1532595346@abv.bg"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "cf3103d8-04a9-4c2a-926c-165ee46a5c29",
					"name": " QHTOD-T233 (1.0) [aUser] Delete a user by user ID [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a15d1cdc-53a8-4364-9db7-8e33c4661f92",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden'] = responseCode.code === 403;",
									"tests['Returned message is correct'] = data.message === \"You don't have permissions to delete users.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?user_id=4259",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "4259"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "25da477f-cbe1-44c5-b421-d808b476c0f3",
					"name": " QHTOD-T234 (1.0) [aUser] Delete a user by username [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a15d1cdc-53a8-4364-9db7-8e33c4661f92",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden'] = responseCode.code === 403;",
									"tests['Returned message is correct'] = data.message === \"You don't have permissions to delete users.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?username=Name251",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "Name251"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "172064f0-defb-45bd-b5af-a11fca6af025",
					"name": " QHTOD-T245 (1.0) [aUser] Delete your own account [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b0121b38-7f18-4c64-af1a-28f03b5e887f",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden'] = responseCode.code === 403;",
									"tests['Returned message is correct'] = data.message === \"You don't have permissions to delete users.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?user_id=581",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "581"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "888d2043-67bb-405a-94a8-8961b2fca93f",
					"name": " QHTOD-T241 (1.0) [iAdmin] Delete a user by mail [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3205934-482d-4e01-b14a-00f51d45a18f",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Returned message is correct'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?mail=mail856@asd.bg",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "mail",
									"value": "mail856@asd.bg"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "545fe6da-4b4d-4b4c-b291-631120ce47ab",
					"name": " QHTOD-T239 (1.0) [iAdmin] Delete a user by user ID [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3205934-482d-4e01-b14a-00f51d45a18f",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Returned message is correct'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "dc3bd0b1-7b49-4494-a06e-7eabb7e375ae",
					"name": " QHTOD-T240 (1.0) [iAdmin] Delete a user by username [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3205934-482d-4e01-b14a-00f51d45a18f",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Returned message is correct'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?username=test0003",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "test0003"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "4d0a74ef-1203-4336-951c-d6fc69f01f2a",
					"name": " QHTOD-T238 (1.0) [iUser] Delete a user by mail [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3205934-482d-4e01-b14a-00f51d45a18f",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Returned message is correct'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?mail=mail856@asd.bg",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "mail",
									"value": "mail856@asd.bg"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "10181aee-339a-4309-9e4d-a885f231839e",
					"name": " QHTOD-T236 (1.0) [iUser] Delete a user by user ID [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3205934-482d-4e01-b14a-00f51d45a18f",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Returned message is correct'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "41722390-c7d3-417a-8aff-65a74c7a504e",
					"name": " QHTOD-T237 (1.0) [iUser] Delete a user by username [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3205934-482d-4e01-b14a-00f51d45a18f",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Returned message is correct'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?username=pesho497",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "pesho497"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1e78d7cd-d693-40c0-b101-2a947cbf5df6",
					"name": " QHTOD-T243 (1.0) [noAuth] Delete a user by username [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fafdd856-d6e1-4103-a6fa-1af2d42025b1",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Returned message is correct'] = data.message === \"Authorization required.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?username=pesho497",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "pesho497"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d4c94d12-fa0b-4e59-bf40-da8dbac9f11f",
					"name": " QHTOD-T242 (1.0) [noAuth] Delete a user by user ID [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fafdd856-d6e1-4103-a6fa-1af2d42025b1",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Returned message is correct'] = data.message === \"Authorization required.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?user_id=85",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "85"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "5f6e7a15-daf8-4198-b360-358dd136988e",
					"name": " QHTOD-T244 (1.0) [noAuth] Delete a user by mail [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fafdd856-d6e1-4103-a6fa-1af2d42025b1",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Returned message is correct'] = data.message === \"Authorization required.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?mail=mail856@asd.bg",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "mail",
									"value": "mail856@asd.bg"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "58935f0b-96e7-4dd0-86dd-1a005743c0c9",
					"name": " QHTOD-T232 (1.0) [aAdmin] Try to delete already deleted account [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9f8c43d-fdef-43f2-931b-f5aa70a67007",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 404 Not Found'] = responseCode.code === 404;",
									"tests['Returned message is correct'] = data.message === \"No records changed.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?user_id=4262",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "4262"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "e22424c1-2734-47d5-90f5-3893153ca694",
					"name": "W  QHTOD-T224 (1.0) [aAdmin] Delete a user by username [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0482999-17f8-4ca9-97d7-2afe914e2116",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is successfully deleted.\");",
									"});",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?username=1533022906",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "1533022906"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "042f09c8-15a3-4e45-a5f5-131589e62188",
					"name": "W   QHTOD-T225 (1.0) [aAdmin] Delete a user by mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0482999-17f8-4ca9-97d7-2afe914e2116",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is successfully deleted.\");",
									"});",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?mail=1533022899@abv.bg",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "mail",
									"value": "1533022899@abv.bg"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "2b007897-737c-4b45-ac25-3c3bb9626fa0",
					"name": "W    QHTOD-T227 (1.0) [aAdmin] Delete an active admin by username [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0482999-17f8-4ca9-97d7-2afe914e2116",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is successfully deleted.\");",
									"});",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?username=1533022862",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "1533022862"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "6fb71e91-e67b-4758-8de1-77a4d3b22ccf",
					"name": "W    QHTOD-T228 (1.0) [aAdmin] Delete an active admin by mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0482999-17f8-4ca9-97d7-2afe914e2116",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is successfully deleted.\");",
									"});",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?mail=1533022834@abv.bg",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "mail",
									"value": "1533022834@abv.bg"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "b2959b0f-22e4-410f-943d-547d1768896e",
			"name": "Restore Deleted Lists",
			"item": [
				{
					"_postman_id": "765ce9bd-5ff4-4a50-80f6-b273cfacbeba",
					"name": "Precon of  QHTOD-T267 (1.0) [aAdmin] Restore another active admin's deleted list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c944ea6c-a9fd-432c-9238-d67cb668256b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=62",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "62"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "e444c475-a1e7-48d7-9817-2cb426ac721c",
					"name": " QHTOD-T267 (1.0) [aAdmin] Restore another active admin's deleted list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c209f69d-89ab-41b5-a8e8-dba5b05a9c19",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"and tasks are successfully restored.\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=62",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "62"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c2c945c1-bf3f-4d79-9c2a-4c213e3245a8",
					"name": " QHTOD-T266 (1.0) [aAdmin] Restore another active user's deleted list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c209f69d-89ab-41b5-a8e8-dba5b05a9c19",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"and tasks are successfully restored.\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=128",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "47f77f00-cace-41ae-927d-54520c48ec27",
					"name": "Precon of  QHTOD-T266 (1.0) [aAdmin] Restore another active user's deleted list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "592ee350-3d3a-4011-8ce9-d700b943decb",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "63ba2895-f21d-47a2-a96e-6759dccffbed",
					"name": "Precon of  QHTOD-T265 (1.0) [aAdmin] Restore your own deleted list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e17f58af-caea-479f-b0c9-524899a9c777",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=116",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "116"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "658aecf7-6e1e-4aab-b0ed-76460d24ea7f",
					"name": " QHTOD-T265 (1.0) [aAdmin] Restore your own deleted list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c209f69d-89ab-41b5-a8e8-dba5b05a9c19",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"and tasks are successfully restored.\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=116",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "116"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c83a330c-dda9-40e5-a281-6fdece2e1e51",
					"name": " QHTOD-T275 (1.0) [aAdmin] Try to restore an active list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "67682fc4-8c26-48fe-b6c2-c1b3246f6511",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The list is active. Action denied!\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=116",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "116"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0d2905eb-0552-40fc-bfaf-34e931aabab6",
					"name": " QHTOD-T269 (1.0) [aUser] Restore another active user's deleted list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e357121b-7397-41c6-9ad3-be15a531ed49",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 403 Forbidden'] = responseCode.code === 403;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"You don't own this list. Action denied!\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=118",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "118"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "dd8aac4f-c74e-466b-9bb3-c80e561c86fe",
					"name": " QHTOD-T268 (1.0) [aUser] Restore your own deleted list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9398da3c-217f-45ff-b191-d679e055f882",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"and tasks are successfully restored.\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=128",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "da8ceb44-bdfc-4993-9ec9-1546acd76d6d",
					"name": "Precon of   QHTOD-T268 (1.0) [aUser] Restore your own deleted list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3b7d738-d92c-4765-963d-3285a1bf990f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "e4431b6c-7b2e-4bc6-b112-e062fce5dc17",
					"name": " QHTOD-T273 (1.0) [iAdmin] Restore another active user's deleted list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cea4dcc-243c-45ae-bec9-c8cd27e107ec",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=128",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "835a4cdc-60ba-4159-ab25-919c29559700",
					"name": " QHTOD-T272 (1.0) [iAdmin] Restore your own deleted list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cea4dcc-243c-45ae-bec9-c8cd27e107ec",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=122",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "122"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "4457d964-c1f8-4fe6-b264-faf3359009aa",
					"name": " QHTOD-T271 (1.0) [iUser] Restore another active user's deleted list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cea4dcc-243c-45ae-bec9-c8cd27e107ec",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=111",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "111"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "2fa12f3a-c6e7-4aa5-a5a8-6678465ca979",
					"name": " QHTOD-T270 (1.0) [iUser] Restore your own deleted list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cea4dcc-243c-45ae-bec9-c8cd27e107ec",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=138",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "138"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "8694b588-a9b9-4b42-9efe-e87842fc00dc",
					"name": " QHTOD-T274 (1.0) [noAuth] Restore a random deleted list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "828397e1-c5f5-4263-8c63-9580437df1e3",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required.\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=138",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "138"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "5205d64d-92f5-42c0-bbe9-876e0df25d8c",
			"name": "Search Users",
			"item": [
				{
					"_postman_id": "eccf7231-db9a-4f90-8102-55579d8d292a",
					"name": "[aAdmin] Search existing users by surname [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9e2f5dab-d760-4919-b435-b9e7fa9dfc8b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test is successfull\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"matching your criteria: surname\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?surname=vlasic",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "surname",
									"value": "vlasic"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "bfad7d9a-c86b-4df9-89d1-ac201500f9c4",
					"name": "[aAdmin] Search existing users by user ID [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a6f1ecd1-cb7a-42cf-821c-2c563513dc20",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test is successfull\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"matching your criteria: user_id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?user_id=110",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "user_id",
									"value": "110"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "9c748cb4-1278-4e87-8a53-7ade4b0e1443",
					"name": "[aAdmin] Search existing users by first_name [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8b8b8ad-1d0c-49a7-b661-9ed56584dd7b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test is successfull\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"matching your criteria: first_name\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?first_name=234",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "first_name",
									"value": "234"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "33c0a0b5-050a-44e4-80c8-53cb8277fc6b",
					"name": "[aAdmin] Search existing users by mail [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64e1b043-6285-46e6-aa2b-e40058890b40",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test is successfull\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"matching your criteria: mail\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?mail=234",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "mail",
									"value": "234"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "2a6df757-fb3c-4d83-9564-773bc61b36a4",
					"name": "[aAdmin] Search not existing users by user_id [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b6e0921-5e21-4f3e-9019-5ffd3d00cbff",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test is successfull\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is non-existing.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?user_id=12",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "user_id",
									"value": "12"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "f4a2e6af-3823-48ba-af1b-d119c6fef266",
					"name": "[aAdmin] Search not existing users by first_name [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8eb1f93-6bac-4a12-88d5-bb75286dfb38",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test is successfull\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is non-existing.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?first_name=2dascdasdasxz34",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "first_name",
									"value": "2dascdasdasxz34"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "89c39bc7-5cf8-4ec9-b184-dc30842cf538",
					"name": "[aAdmin] Search not existing users by mail [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "30ad67c3-da9d-4dd8-a2cd-19b3c27de10f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test is successfull\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is non-existing.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?mail=dasdadasdascxz",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "mail",
									"value": "dasdadasdascxz"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "6a0049f3-83ec-4cf4-9b9b-07a60332f623",
					"name": "[aAdmin] Search not existing users by surname [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8b3d782-639d-430d-8a29-7a2853b61212",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test is successfull\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is non-existing.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?surname=231dczxcdaas",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "surname",
									"value": "231dczxcdaas"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "893597dd-7fe3-42b7-b25c-c45a8a5a788d",
					"name": "[aAdmin] Try searching for a user without a specified parameter. [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8548aeff-76e0-49e8-aee9-6c38b1eadc4e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Message: 'User_id, username, first_name, surname or mail needed.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"User_id, username, first_name, surname or mail needed.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "fd6a1fda-89eb-42f3-83a9-fed66fc0d31c",
					"name": "[aUser] Search not existing users by user_id [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8b3d782-639d-430d-8a29-7a2853b61212",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test is successfull\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is non-existing.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?surname=231dczxcdaas",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "surname",
									"value": "231dczxcdaas"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "3dd43e5c-c760-4852-92c8-2a07172856cd",
					"name": "[aUser] Search not existing users by mail[P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8b3d782-639d-430d-8a29-7a2853b61212",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test is successfull\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is non-existing.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?surname=231dczxcdaas",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "surname",
									"value": "231dczxcdaas"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d23bb634-fa75-441e-8334-54362c3d86ee",
					"name": "[aUser] Try searching for a user without a specified parameter. [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b34b2880-a7c5-47ed-872e-0f66b2e8ea29",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Message: 'User_id, username, first_name, surname or mail needed.'\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"User_id, username, first_name, surname or mail needed.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "824fb170-4751-40dd-a1e0-7a9a95a9c15c",
					"name": "[aUser] Search existing users by user_id [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9afb7ba-03cb-4f71-84ba-bd1b2d9b19ae",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test is successfull\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"matching your criteria: user_id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?user_id=234",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "user_id",
									"value": "234"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "428a4d8e-6f79-43cb-94ca-e6b40ffc9bee",
					"name": "[aUser] Search existing users by first_name [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c9b44998-44d9-4fd1-8bdf-a541c4496fc3",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test is successfull\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"matching your criteria: first_name\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?first_name=234",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "first_name",
									"value": "234"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d91a13a8-153a-4b33-8893-fca0a49f3307",
					"name": "[aUser] Search existing users by surname [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ed924ec-0aab-4eb3-b268-883dc3ddbc71",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test is successfull\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"matching your criteria: surname\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?surname=234",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "surname",
									"value": "234"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "71facd1d-5e2d-4d27-98e9-0b259d919ee7",
					"name": "[aUser] Search existing users by mail [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "673a0fee-ad6c-4d75-bcde-10ae884f6543",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test is successfull\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"matching your criteria: mail\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?mail=234",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "mail",
									"value": "234"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "fc29f8f7-6e91-4530-89d9-c7edf6f4a1ad",
					"name": "[aUser] Search existing users by first_name with less than 3 symbols [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "929ebed1-4f96-4b41-9d00-fc396595931c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test is successfull\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Please provide atleast 3 characters otherwise you may get a lot of results.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?first_name=23",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "first_name",
									"value": "23"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "f4e817f9-29dd-4539-8087-415549cd5032",
					"name": "[aUser] Search existing users by surname with less than 3 symbols [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1b204f5b-4948-4257-807f-ba516c6c2b74",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test is successfull\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Please provide atleast 3 characters otherwise you may get a lot of results.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?surname=23",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "surname",
									"value": "23"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "55079c49-dd7d-457e-85cd-0f41f1cabe31",
					"name": "[aUser] Search not existing users by surname [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8b3d782-639d-430d-8a29-7a2853b61212",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test is successfull\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is non-existing.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?surname=231dczxcdaas",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "surname",
									"value": "231dczxcdaas"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "6a6593f6-45d1-4bcc-933f-e3dea9625d97",
					"name": "[iAdmin] Search existing users by user_id [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a44af3b-7442-4fa7-96bf-fc174a4cb725",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Message: 'Account disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?user_id=232",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "user_id",
									"value": "232"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "06b9e775-a846-4ddd-811e-22dc12c53b23",
					"name": "[iAdmin] Search existing users by first_name [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a44af3b-7442-4fa7-96bf-fc174a4cb725",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Message: 'Account disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?first_name=232",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "first_name",
									"value": "232"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a4f6f1ac-9339-4149-8d0a-0b88b704e865",
					"name": "[iAdmin] Search existing users by surname [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a44af3b-7442-4fa7-96bf-fc174a4cb725",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Message: 'Account disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?surname=232",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "surname",
									"value": "232"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "5bf0b472-45bf-4177-b660-795fd45daae6",
					"name": "[iUser] Search existing users by user_id [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a44af3b-7442-4fa7-96bf-fc174a4cb725",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Message: 'Account disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inact_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?user_id=232",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "user_id",
									"value": "232"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7893c07d-e4e7-42d1-a4b7-8eb07dbb71b8",
					"name": "[aUser] Search not existing users by first_name [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8b3d782-639d-430d-8a29-7a2853b61212",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test is successfull\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is non-existing.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?first_name=231dczxcdaas",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "first_name",
									"value": "231dczxcdaas"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0217954a-121b-45dd-9938-0f9a34a0bf18",
					"name": "[iUser] Search existing users by mail [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a44af3b-7442-4fa7-96bf-fc174a4cb725",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Message: 'Account disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inact_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?mail=232",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "mail",
									"value": "232"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0cc50b19-54dc-465a-bc47-2b217d2c404b",
					"name": "[noAuth] Search existing users by user_id [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c9f7ebe-1aaa-46db-8557-2acc28f1164f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Message: 'Authorization required.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?user_id=232",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "user_id",
									"value": "232"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "626062c8-f7eb-4cae-a11a-63089aa0dc77",
					"name": "[iUser] Search existing users by surname [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a44af3b-7442-4fa7-96bf-fc174a4cb725",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Message: 'Account disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inact_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?surname=232",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "surname",
									"value": "232"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "e304b146-9933-452d-8a95-1e69eb63750e",
					"name": "[noAuth] Search existing users by surname [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c9f7ebe-1aaa-46db-8557-2acc28f1164f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Message: 'Authorization required.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?surname=232",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "surname",
									"value": "232"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "4b537ffd-e9b8-4b01-88dd-e6b82caf10e5",
					"name": "[noAuth] Search existing users by first_name [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c9f7ebe-1aaa-46db-8557-2acc28f1164f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Message: 'Authorization required.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?first_name=232",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "first_name",
									"value": "232"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0f0765b7-ce52-4959-8a32-23c12668650d",
					"name": "[noAuth] Search existing users by mail [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c9f7ebe-1aaa-46db-8557-2acc28f1164f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Message: 'Authorization required.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?mail=232",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "mail",
									"value": "232"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b2787eca-9795-4354-b648-cec6a413f327",
					"name": "[iUser] Search existing users by first_name [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a44af3b-7442-4fa7-96bf-fc174a4cb725",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Message: 'Account disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inact_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?first_name=232",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "first_name",
									"value": "232"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "9c0e7809-587a-4b00-af8e-37a7baf60123",
					"name": "[iAdmin] Search existing users by mail [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a44af3b-7442-4fa7-96bf-fc174a4cb725",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Message: 'Account disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?mail=232",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "mail",
									"value": "232"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c3fe2869-a1fd-4d51-ba9a-f00594a05476",
					"name": "[aUser] Search existing users by mail with less than 3 symbols [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a64dc4fc-101e-4d38-b023-db0ab3a95ac1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Test is successfull\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Please provide atleast 3 characters otherwise you may get a lot of results.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user-search?mail=23",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user-search"
							],
							"query": [
								{
									"key": "mail",
									"value": "23"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}