{
	"info": {
		"_postman_id": "3e8e3a01-a768-4470-a4a5-57ee93f7bd65",
		"name": "Regresion-Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"_postman_id": "e86824bc-e7bc-44a9-9601-57de6a2888ef",
			"name": "List all Lists",
			"item": [
				{
					"_postman_id": "e389e622-9bca-4d00-9887-b5a9c95b6bb2",
					"name": "[aUser] List all lists [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a34417d7-8444-41bb-8881-8d6e0173019b",
								"type": "text/javascript",
								"exec": [
									"//var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"//tests['Body is corect'] = data.message === \"Insufficient rights for that action. Please contact administrator.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200",
									"",
									"pm.test(\"Body is corect\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Insufficient rights for that action. Please contact administrator.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\" : \" \",\n\t\"list_description\" : \"{{$randomInt}} update description {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/list-all-lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"list-all-lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "737635b3-fdf1-4d6e-b123-a9c0dfc3c2c6",
					"name": "[aAdmin] List all active lists [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "057029df-454b-4905-a685-e1caf3a294c1",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									" ",
									"",
									"//tests['Validate schema'] = tv4.validate(dara, schema);",
									"tests['Status code is 200'] = responseCode.code === 200;",
									"",
									" for (var num in data){",
									"   tests['List is active'] = data[num].list_is_active === 1; ",
									"   }",
									"",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									"",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e3ad0443-e105-415a-8071-bbadd2a102d2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\" : \" \",\n\t\"list_description\" : \"{{$randomInt}} update description {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/list-all-lists?status=active",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"list-all-lists"
							],
							"query": [
								{
									"key": "status",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "372aa359-0471-4b2e-8842-43e95f2fed0a",
					"name": "[aAdmin] List all lists [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c0a17e4-bd86-45d8-911d-9af661b13ebe",
								"type": "text/javascript",
								"exec": [
									"tests['Status code is 200'] = responseCode.code === 200;",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\" : \" \",\n\t\"list_description\" : \"{{$randomInt}} update description {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/list-all-lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"list-all-lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "4d585dba-2aa7-488d-8d8b-9b952153fdf1",
					"name": "[aAdmin] List all inactive lists [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5bf9aef3-7611-4560-993b-6d787db0f741",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"for (var num in data){",
									"   tests['List\\'s are inactive'] = data[num].list_is_active === 0; ",
									"   }",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\" : \" \",\n\t\"list_description\" : \"{{$randomInt}} update description {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/list-all-lists?status=inactive",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"list-all-lists"
							],
							"query": [
								{
									"key": "status",
									"value": "inactive"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1fc54b55-f00f-4c82-a2f1-93c1d452f636",
					"name": "[aUser] List all active lists [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b45f1751-d378-4da4-95e3-c3b7d2e71dd3",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Insufficient rights for that action. Please contact administrator.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\" : \" \",\n\t\"list_description\" : \"{{$randomInt}} update description {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/list-all-lists?status=active",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"list-all-lists"
							],
							"query": [
								{
									"key": "status",
									"value": "active"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0932b1b2-6071-4ac8-81bb-6e50ad2d6993",
					"name": "[iAdmin] List all lists [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "95f9d49d-18e6-4b1d-8b74-03d71eed78fd",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\" : \" \",\n\t\"list_description\" : \"{{$randomInt}} update description {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/list-all-lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"list-all-lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7b1d8228-7687-4327-af3b-3094e90c94b0",
					"name": "[aUser] List all inactive lists [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7108ee0-ef23-47b6-a4a1-be28cc7f19d3",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Insufficient rights for that action. Please contact administrator.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\" : \" \",\n\t\"list_description\" : \"{{$randomInt}} update description {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/list-all-lists?status=inactive",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"list-all-lists"
							],
							"query": [
								{
									"key": "status",
									"value": "inactive"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "507a36e6-9cda-43b4-aa20-2535939a2426",
					"name": "[iUser] List all lists [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "db63ad3c-3a89-49c6-b89a-8ec538bf744e",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\" : \" \",\n\t\"list_description\" : \"{{$randomInt}} update description {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/list-all-lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"list-all-lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "045e9ad6-9a24-4722-9572-ac7192f91ca2",
					"name": "[noAuth] List all lists [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ae6756ca-a0c0-464c-a7b8-985ef4c28a49",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Authorization required.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\" : \" \",\n\t\"list_description\" : \"{{$randomInt}} update description {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/list-all-lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"list-all-lists"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "2163b3b2-3237-44d5-aa49-51b1aa921ce7",
			"name": "List List's Task",
			"item": [
				{
					"_postman_id": "18deca9b-8148-4ebe-82c4-50f9d29c1f9d",
					"name": "[aAdmin] Try to list his own task's with active list id. [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "550ea50d-a6ec-4a66-bb40-1acc22b3b497",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message is available.\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The tasks in\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=19",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "19"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1224c590-d15a-468a-bb68-785efed211cf",
					"name": "[aAdmin] try to list his own task's with inactive list id. [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9a0e1c56-e12a-442a-bf1c-4271d4f626ef",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message 'The tasks in list_id....' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The tasks in\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=24",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "24"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "4e957958-ac09-4608-a2de-a7615aef99eb",
					"name": "[aAdmin] try to list someone else task's with active list id. [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd04d9f0-c2bf-495f-90c3-5cf16ef09cfc",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message 'The tasks in list_id....' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The tasks in\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "127"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "ec0ded85-8973-47a3-b76a-9b169f9df38e",
					"name": "[aAdmin] try to list someone else task's with inactive list id. [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1963b535-20cf-4102-9414-f1ae7847a318",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message 'The tasks in list_id....' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The tasks in\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "411473aa-7951-4169-b741-c162a7e3c039",
					"name": "[aAdmin] try to list someone else task's with non-existing list id. [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f9708c04-fde7-4f11-98f1-f9f403afa9c8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Message: 'List list_id does not exist..' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=12",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "12"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "900f953a-4daf-468b-885e-c582aa56914b",
					"name": "[aUser] try to list someone else task's with active list id. [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0521a402-b714-4547-a4fc-37ae6b0a4e9c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message that the list does not exist is present.\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"List 127 does not exist!\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "127"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b17c724d-30cf-4f2c-8acd-5af0162ad783",
					"name": "[aUser] try to list someone else task's with inactive list id [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "07230689-c062-4eaf-a515-35e9b2123db4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message that the list does not exist is present.\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"List 128 does not exist!\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "911bab73-6ac7-439e-bcd9-15891082457f",
					"name": "[aUser] try to list his own task's with active list id [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9524f40e-0683-4d24-8951-16b6d18b823d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Message: 'The tasks in list_id...' is present\" , function () {",
									"    pm.expect(pm.response.text()).to.include(\"The tasks in\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=109",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "109"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c882c536-8367-46b0-8986-b754c4d64e1c",
					"name": "[aUser] try to list his own task's with inactive list id [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c67bb3a6-f345-4c01-a689-c88d4f109cae",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message: 'List list_id' .. does not exist any more' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"does not exist any more!\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=110",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "110"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "cd65fcd6-5054-4051-8e85-909e6abc4bf8",
					"name": "[iAdmin] try to list his own task's with active list id. [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd17afbb-7b7d-4f28-84ab-280f107068e5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message: 'Account disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=129",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "129"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "8e700d65-0cd6-407e-a1a7-e5cd75787b2c",
					"name": "[iAdmin] try to list his own task's with inactive list id. [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "646a1c59-39a0-417f-bb7f-a624fac1ff74",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account is disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=130",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "130"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "093f88cd-52f3-4218-a974-8ad382ddbe9d",
					"name": "[iAdmin] try to list someone else task's with active list id. [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e41186d8-5d03-4ab4-90f1-f8aba99b1452",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account is disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "127"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a3285009-a6c1-41fd-ad49-e232078f9609",
					"name": "[iAdmin] try to list someone else task's with inactive list id. [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "209ca173-6005-43fa-8436-79ed01df84eb",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account is disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "f481fdfe-e30a-4006-b4aa-8d28f4342fba",
					"name": "[iAdmin] try to list someone else task's with non-existing list id. [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4e237869-6023-4b24-8c11-a11f8e3c0e49",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account is disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=12",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "12"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "9acdd3e5-7842-4a7c-8243-4c0b5c210299",
					"name": "[iUser] try to list his own task's with active list id [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08ad5597-6b93-45e8-ae75-d9c6c753ad85",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account is disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inact_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "131"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "f5df91f9-0b3d-42b3-80f5-e9acff4f078e",
					"name": "[iUser] try to list his own task's with inactive list id [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "353d662a-3db1-4684-b2d5-109fdae9a035",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account is disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inact_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=132",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "132"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0a1b2e31-509c-4882-a99e-b0c2a85f8778",
					"name": "[iUser] try to list someone else task's with active list id [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45d8800c-978e-49bc-9704-427ae760fc2b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account is disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inact_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "127"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "9613846c-6d67-4fc0-a2af-6d6c87314396",
					"name": "[iUser] try to list someone else task's with inactive list id [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "90088047-9ea4-43df-98a4-54706b2d9489",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account is disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inact_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "162f9b9e-231e-4c0f-aac4-6c0a35bcc887",
					"name": "[noAuth] try to list someone else task's with non-existing list id. [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "66cc1050-0f5c-468f-9bbf-8e8ed3bb206f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Authorization required.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=12",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "12"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0604a392-e7fa-445a-b1e8-626d212ba489",
					"name": "[noAuth] try to list task of existing active admin [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0a346f1c-f000-412f-9e27-377001bd9264",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Authorization required.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=19",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "19"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "59d101ab-ceb5-434b-9ac4-dd92e1bb932d",
					"name": "[noAuth] try to list task of existing inactive admin [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8fab048-4ac9-49b9-af31-76a4ce254a5a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Authorization required.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=129",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "129"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "e24767db-d5a3-481e-9d13-fdfb4b8c5ac5",
					"name": "[noAuth] try to list task of existing inactive user [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "328a79a5-be89-42ef-b196-fd83e64993b9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Authorization required.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_in_list=131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_in_list",
									"value": "131"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "212c4517-feee-4b25-80f1-c6a326bdd086",
			"name": "List User's List",
			"item": [
				{
					"_postman_id": "1134f65f-25a3-42d4-bbc2-1ace3c752465",
					"name": "List user's lists as an active user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f10d8e54-1847-47f1-8ba6-a74655fb6595",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Contains List ID\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_id\");",
									"});",
									"",
									"pm.test(\"Contains List Title\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_title\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						},
						"description": "An active user logs into the system with valid credentials and selects a GET Lists request in order to get all his lists."
					},
					"response": []
				},
				{
					"_postman_id": "f1e0d0f7-aff6-4961-99ca-04318e8fe2ad",
					"name": "List user's lists as an inactive user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7181ad60-9a0b-43a0-ab25-d844845f0608",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account Disabled' is displayed\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "inactive_user",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						},
						"description": "An inactive user tries to log into the system with valid credentials and selects a GET Lists request in order to get all his lists."
					},
					"response": []
				},
				{
					"_postman_id": "1905a3fd-34cc-466d-84d2-75a0ecd8ba28",
					"name": "List a specific user's lists as an active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "98669d4b-0107-409c-83cd-e30d6d538773",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Contains 'List ID: 60' which belongs to the other user'\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"60,\");",
									"});",
									"",
									"",
									"pm.test(\"Contains 'Active Status'\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"80,\");",
									"});",
									"",
									"pm.test(\"Contains 'Inactive Status'\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"81,\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?user_id=203",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "user_id",
									"value": "203"
								}
							]
						},
						"description": "An active admin logs into the system with valid credentials and selects a GET Lists request in order to get all lists of a specific user."
					},
					"response": []
				},
				{
					"_postman_id": "7fd8be0a-1248-4a44-9dc6-f85d7a9d9fb1",
					"name": "List user's lists as an inactive admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "419245bf-7957-44b9-a40c-73a5eaeab66b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message 'Acount is disabled' is diplayed\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactive_admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						},
						"description": "An inactive admin tries to log into the system with valid credentials and selects a GET Lists request in order to get all his lists."
					},
					"response": []
				},
				{
					"_postman_id": "2f227232-a159-467a-92df-759af34722d0",
					"name": "List user's lists as a non-existing user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b6b771d4-765b-4050-8d53-63a2fc0f8525",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message 'Authorization required' is displayed\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						},
						"description": "A non-existing user tries to log into the system with non-existing credentials and selects a GET Lists request in order to get others' lists."
					},
					"response": []
				},
				{
					"_postman_id": "931782fa-5439-4b79-8f2e-1a2689ed0978",
					"name": "List а specific user's lists as another active user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "50680755-787d-4657-9491-f09846fa6e16",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {",
									"    console.log(response.json());",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8abdf29c-3013-4c69-a667-5a3e474bf66e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"The lists of the login account is present.\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"18\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?user_id=61",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "user_id",
									"value": "61"
								}
							]
						},
						"description": "An active user logs into the system with valid credentials and selects a GET Lists request with the ID of another user in order to get his lists."
					},
					"response": []
				},
				{
					"_postman_id": "c6c8ed22-60b2-4303-b652-3165e61c348c",
					"name": "List user's lists as an active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "68c06a23-b03f-42f7-914d-f36937bd36e8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"The logged in admin's list is present.\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"123\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						},
						"description": "An active admin logs into the system with valid credentials and selects a GET Lists request in order to get all his lists."
					},
					"response": []
				},
				{
					"_postman_id": "0b449a33-8423-4c73-8ea4-ca6faf2c3234",
					"name": "List user's active lists as an active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d78fd0b-c509-4fc9-babc-45842cf69b34",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"The active lists of the logged in admin is present.\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"1\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						},
						"description": "An active admin logs into the system with valid credentials and selects a GET Lists request in order to check all his active lists."
					},
					"response": []
				},
				{
					"_postman_id": "f573343b-773e-49b6-a986-86adcd9338fc",
					"name": "List user's inactive lists as an active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "86e49fb3-f859-49d7-a23d-a870c5fd3d1e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"All inactive lists of the logged in admin is present.\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"80,\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "active_admin",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						},
						"description": "An active admin logs into the system with valid credentials and selects a GET Lists request in order to check all his inactive lists."
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "a6f938b7-8005-4a1a-9746-1a1221aa9782",
			"name": "List Users",
			"item": []
		},
		{
			"_postman_id": "05a05ec8-521e-47df-8bf2-fb4d56e6194e",
			"name": "Create User",
			"item": [
				{
					"_postman_id": "b1537721-6daa-467e-a85c-b918695b2aa1",
					"name": "Create user with unique username and mail as active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c55cad88-bc76-4514-b340-464ade580917",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"'id' of the user is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"{{$timestamp}}@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						},
						"description": "Create user with unique username and mail."
					},
					"response": []
				},
				{
					"_postman_id": "936cfd2d-818e-483f-be3b-e44d2c763bca",
					"name": "Create user only with email, username and password as active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "54182797-e3e7-4ff5-b85a-1ec239b43e63",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"'id' of the user is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"\",\n    \"surname\" : \"\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"{{$timestamp}}@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "feca1fe5-19fb-4e0e-a73d-601443385d2e",
					"name": "Create user with empty fields as active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00d48bd5-c82d-480c-a9ab-0f8a06465701",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message: 'Invalid data.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid data.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"\",\n    \"surname\" : \"\",\n    \"username\": \"\",\n    \"mail\": \"\",\n    \"password\": \"\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b8b4c747-0291-414f-a841-2616f4fb1025",
					"name": "Create user only with email and password as active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9048df74-beee-4d0c-bca5-2f3d6b52f768",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message: 'Invalid data.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid data.\");",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dad94356-23c1-4dc9-88a7-0629a9ac651c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"\",\n    \"surname\" : \"\",\n    \"username\": \"\",\n    \"mail\": \"{{$timestamp}}\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "e6532705-327d-4628-8565-ae6a980c2abc",
					"name": "Create admin user as active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cfd21c71-4eb4-42e4-a40c-dfe89b544425",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"'id' of the user is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"\",\n    \"surname\" : \"\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"{{$timestamp}}\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 1\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "650a6a69-ee56-448e-8cb3-398106f29a80",
					"name": "Create new account with no auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8e3a526-9774-4fc0-a9e5-0d4c20332279",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"'id' of the user is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"{{$timestamp}}@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d3a4989b-d69a-4a94-8cc8-239493e9f684",
					"name": "Create user with already existing email with no auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fd4352e9-f85e-4665-9c02-bd8f4fc41aaf",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Error message 'Duplicate Entry' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Duplicate entry\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"opa@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "3ade86a7-4945-4467-93b4-814f96f6eff8",
					"name": "Create user with already existing email as active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c08271ab-8765-4813-bcd2-f0b965b51b55",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Error message 'Duplicate Entry' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Duplicate entry\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"opa@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b5cdcf71-70b8-47b4-928d-909e20baefa5",
					"name": "Create user with already existing username with no auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e540339-c26c-4833-af5d-154d674bac2c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Error message 'Duplicate Entry' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Duplicate entry\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"act_alex\",\n    \"mail\": \"{{$timestamp}}@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d350c659-f0f7-4447-b658-896f3353efd8",
					"name": "Create user with already existing username as active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "24ec28dd-b146-49b6-92bb-41eed6f2ce1b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Error message 'Duplicate Entry' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Duplicate entry\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"act_alex\",\n    \"mail\": \"{{$timestamp}}@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1f48f9f2-4dd6-42a9-ab1d-7f24bbc94207",
					"name": "Try to create user with valid data as an inactive admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e7ea6fc-7d64-416f-9f5f-061f5db636f5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message: 'No permissions!' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No permissions!\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"{{$timestamp}}@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b665e066-63c5-4d24-8aac-ebaba332b708",
					"name": "Try to create admin user as an inactive admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ef7f8787-5687-407d-8cbb-bc3ac052b711",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message: 'No permissions!' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No permissions!\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"{{$timestamp}}@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 1\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "c2954920-174f-455e-a1e7-2eb207c8a15c",
			"name": "Create Task",
			"item": [
				{
					"_postman_id": "3dff32b6-5705-4587-9194-eebf3479e2a3",
					"name": " QHTOD-T70 (1.0) [aUser] Create task with filled only one mandatory field (title) [N]  copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 404 Not Found'] = responseCode.code === 404;",
									"tests['Body is corect'] = data.message === \"You don not own list with id undefined\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n   \"task_title\": \"{{$randomInt}} title 128 {{$timestamp}}\"\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "8049f051-4c80-4eab-95f5-57ab765a5494",
					"name": " QHTOD-T69 (1.0) [aUser] Create task with filled only one mandatory field (list id) [N]  copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"Field 'task_title' doesn't have a default value\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n   \"task_in_list\": 128\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a1751c25-8d56-4791-a4e9-01340edac747",
					"name": " QHTOD-T72 (1.0) [iUser] Create task with filled all mandatory fields (title and list id) [N]  copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDM6dGVzdDAwMDM="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"{{$randomInt}} title {{$timestamp}}\", \r\n   \"task_in_list\": 128\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "bd78dd9d-cbdb-44dd-a77d-287dbd7d5fe1",
					"name": " QHTOD-T61 (1.0) [aUser] Create task with filled all mandatory fields (title and list id) [P]  copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"{{$randomInt}} title {{$timestamp}}\", \r\n   \"task_in_list\": 128\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "bae05c89-a501-4946-a6eb-8b6776913f29",
					"name": " QHTOD-T79 (1.0) [aUser] Create task with filled all mandatory and one optional field (status) [P]  copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"{{$randomInt}} title {{$timestamp}}\",\r\n   \"task_status\":\"Finished\", \r\n   \"task_in_list\": 128\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "e26a66d2-440f-44b8-9e3a-5364cfae6055",
					"name": " QHTOD-T78 (1.0) [aUser] Create task with filled all mandatory and one optional field (description) [P]  copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"{{$randomInt}} title {{$timestamp}}\",\r\n   \"task_desc\":\"{{$randomInt}} description {{$timestamp}}\", \r\n   \"task_in_list\": 128\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0bf9ada4-4143-4702-98b2-003dd7989ec9",
					"name": " QHTOD-T71 (1.0) [aUser] Create task with empty fields [N]  copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"\",\r\n   \"tasc_desc\":\"\",\r\n   \"tasac_status\":\"\",\r\n   \"task_in_list\": 128\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "043ef1d7-f345-4adf-a4a0-b9ce5e51df76",
					"name": " QHTOD-T74 (1.0) [aUser] Create tasks with same titles in one list [N]  copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Reques'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"Duplicate entry 'some tekst new-128' for key 'UC_Task_Name_Per_List'\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"some tekst new\", \r\n   \"task_in_list\": 128\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "f3db6fe8-332a-4c13-b073-dfd93d6e59b0",
					"name": "[noAuth] Create task with filled all mandatory fields (title and list id) [N] copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Authorization required.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"{{$randomInt}} some tekst new {{$timestamp}}\", \r\n   \"task_in_list\": 127\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d3386296-4d81-4bd5-84cc-05d27fd4966f",
					"name": "[aUser] Create task in a not shared list of another user [N] copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 404 Not Found'] = responseCode.code === 404;",
									"tests['Body is corect'] = data.message === \"You don not own list with id 100\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"some tekst\",\r\n   \"task_in_list\": 100\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "fcb14740-3762-4e03-b415-75c8234b34d7",
					"name": "[aUser] Create task with filled all mandatory and optional fields [P]  copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"{{$randomInt}} some tekst new {{$timestamp}}\",\r\n   \"task_desc\": \"task in list 127 user 581\",\r\n   \"task_status\":\"Not Started\",\r\n   \"task_in_list\": 127\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "873038b0-14f6-42bb-8aff-d07da1f756e1",
					"name": " QHTOD-T76 (1.0) [aUser] Create tasks with different titles in one list [P]  copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"task_title\": \"{{$randomInt}} some tekst new {{$timestamp}}\", \r\n   \"task_in_list\": 127\r\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "01a20149-81a4-4ea3-9745-1f73c69bef66",
			"name": "Create List",
			"item": [
				{
					"_postman_id": "eb693235-58fd-4ddf-91f2-2cc8d28844b6",
					"name": "Create List with filled Title and filled Description as active user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5b29e98-d45e-4af0-a527-34691983a4f5",
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"listID\", jsonData.list_id);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"List ID is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_id\");",
									"});",
									"",
									"",
									"",
									"pm.test(\"List owner ID is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_owner_user_id\");",
									"});",
									"",
									"pm.test(\"List title is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_title\");",
									"});",
									"",
									"",
									"pm.test(\"List description is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_description\");",
									"});",
									"",
									"",
									"",
									"pm.test(\"Status of the list is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_is_active\");",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"perfect10\",\n    \"list_description\" : \"short desc\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "34e4b739-7914-4cc4-a1db-1734d8c1ff85",
					"name": "Create List with filled Title and empty Description as active user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d5b0085-2c4f-4744-9f25-3c1b445e709b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"List ID is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_id\");",
									"});",
									"",
									"",
									"",
									"pm.test(\"List owner ID is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_owner_user_id\");",
									"});",
									"",
									"pm.test(\"List title is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_title\");",
									"});",
									"",
									"",
									"pm.test(\"List description is empty\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_description\");",
									"});",
									"",
									"",
									"",
									"pm.test(\"Status of the list is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_is_active\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"perfect10\",\n    \"list_description\": \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "f4120616-5d5f-414e-badd-f50d16b13818",
					"name": "Create List with empty Title and empty Description as active user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10504c59-79d4-4ae7-8607-cf6ad183f38f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message 'Invalid data.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid data.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0b88e2dc-8436-4483-81b5-ef9d9f7d091a",
					"name": "Create List with an already existing Title with one of the logged in user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b4bf4aa5-4a8e-4917-84ca-4ce609fddba9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"The list is successfuly created\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"perfect10\",\n    \"list_description\" : \"short desc\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "54bd9a69-4291-4cac-9ec7-b3084d201e13",
					"name": "Create List with an already existing Title of another user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "98fa62df-9dfc-4fdf-a1d0-5c1b4749d36e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"The list is successfuly created\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"list_id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"dont DELETE\",\n    \"list_description\" : \"short desc\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "5758f652-d281-4d86-904e-18a91e9afb92",
					"name": "Create List as a non-existing user (no auth)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19b66890-ff8a-4f28-ad0a-6cdfab039d25",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message 'Authorization required.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"test123\",\n    \"list_description\" : \"short desc\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7e74bc97-4341-4d71-91c2-1560dde628ef",
					"name": "Create list as an inactive user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed4a42b7-cf23-4e0d-9627-19df1e9d4735",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message 'Account disabled' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "inact_alex",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"test123\",\n    \"list_description\" : \"short desc\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a973bcb5-a47f-4920-8ff4-523e84d22d87",
					"name": "Create List with empty Title and filled Description as an active user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a0bf707-f223-4e10-872e-894b65605403",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Message 'Invalid data.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid data.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"\",\n    \"list_description\" : \"without title\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "9dbfdb60-4e8b-4c84-bcfc-cb607129bae7",
			"name": "Update List",
			"item": [
				{
					"_postman_id": "87f9d237-7a61-4454-badb-9e90ea600d7a",
					"name": " QHTOD-T50 (1.0) [aUser] The list title is updated [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 400ms'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$randomInt}} new title\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"127"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "3265f567-2020-410c-8e03-96fb3c0b811e",
					"name": " QHTOD-T51 (1.0) [aUser] The list title is removed and left empty [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check the title of the list. It must be more than 1 symbol\";",
									"tests['Responese time is < 400ms'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"127"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "5c36ba52-b2a6-4f24-b614-34b0fc86e45e",
					"name": " QHTOD-T52 (1.0) [aUser] List description update of the logged user [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 400ms'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"listale322222x\",  \n    \"list_description\": \"{{$timestamp}} new desc\"  \n}"
						},
						"url": {
							"raw": "localhost:3000/lists/128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"128"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "96054d67-8913-452e-a13b-5e4ea7519dde",
					"name": " QHTOD-T53 (1.0) [aUser] The list title and description are updated at the same time [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 400ms'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$randomInt}} type here the new title\",\n    \"list_description\": \"type here the new description {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"127"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c7ff0e55-7caf-4cc1-b90a-af347f476c66",
					"name": " QHTOD-T54 (1.0) [aUser] Removing a task from list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 400ms'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"listale322222x\",  \n    \"remove_task_id\":  267 \n}"
						},
						"url": {
							"raw": "localhost:3000/lists/128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"128"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "206aa681-83bb-48d2-b9c2-84182795513e",
					"name": " QHTOD-T56 (1.0) [aUser] Sharing a list with another inactive user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden'] = responseCode.code === 403;",
									"tests['Body is corect'] = data.message === \"You can't update this list.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"listale322222x {{$randomInt}}\",\n\t\"shared_with_user_id\" : 582\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/130",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"130"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a6543fb9-b58d-4ba6-b016-b6c950155a10",
					"name": " QHTOD-T57 (1.0) [aAdmin] The list title of another active user is updated [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$randomInt}} listalex\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"127"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d607c8a5-5d45-4598-8f20-70151cd69431",
					"name": " QHTOD-T58 (1.0) [aAdmin] The list description of another active user is updated [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$randomInt}} listalex\",\n    \"list_description\": \"type here the new description {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/127",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"127"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "ff7b631f-1d55-471c-afe1-0fa7ba26a6bf",
					"name": " QHTOD-T59 (1.0) [aAdmin] The list title and description of another active user are updated [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$randomInt}} listalex\",\n    \"list_description\": \"type here the new description {{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/129",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"129"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "2d873bc6-23b8-4185-b970-54b29eb67358",
					"name": " QHTOD-T60 (1.0) [aAdmin] A list's task of another active user is removed [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"List has been successfully updated\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"listale322222x\",  \n    \"remove_task_id\": 265\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"128"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1beb1997-f90a-450a-8744-83620f639d79",
					"name": " QHTOD-T62 (1.0) [iAdmin] The list title of another active user is updated [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 400 Bad Request.'] = responseCode.code === 400;",
									"tests['Body is corect: You are inactive admin and you can not update anything.'] = data.message === \"You are inactive admin and you can't update anything.\";",
									"tests['Responese time is < 400ms.'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$timestamp}} title\" \n}"
						},
						"url": {
							"raw": "localhost:3000/lists/131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"131"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "66ad6183-6821-4247-88ab-c1edb7419dc5",
					"name": " QHTOD-T63 (1.0) [aUser] Update the list title of another active user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden.'] = responseCode.code === 403;",
									"tests['Body is corect: You can not update this list.'] = data.message === \"You can't update this list.\";",
									"tests['Responese time is < 400ms.'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$timestamp}}\" \n}"
						},
						"url": {
							"raw": "localhost:3000/lists/131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"131"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "66c2ca8c-a280-4679-b3bd-4cb12f8aeaac",
					"name": " QHTOD-T64 (1.0) [aUser] Update the list description of another active user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden.'] = responseCode.code === 403;",
									"tests['Body is corect.'] = data.message === \"You can't update this list.\";",
									"tests['Responese time is < 400ms.'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"perfect10\",\n\t\"list_description\" : \"{{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"131"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "e4e54d34-2e8b-4db0-a829-32cb1f360eb4",
					"name": " QHTOD-T65 (1.0) [aUser] Delete a task from another user's list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden'] = responseCode.code === 403;",
									"tests['Body is corect'] = data.message === \"You can't update this list.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic YWN0X2FsZXg6cGFzc3dvcmQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"listale322222x\",  \n    \"remove_task_id\":  267\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"128"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c3ba695c-3b6d-4888-8b7d-5c78cc969617",
					"name": " QHTOD-T66 (1.0) [iAdmin] The list description of another active user is updated [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 400 Bad Request.'] = responseCode.code === 400;",
									"tests['Body is corect: You are inactive admin and you can not update anything.'] = data.message === \"You are inactive admin and you can't update anything.\";",
									"tests['Responese time is < 400ms.'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$timestamp}} title\",\n\t\"list_description\" : \"{{$randomInt}} description\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"131"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "f4f455a6-527d-49e4-9ba5-b8c4e1ab9076",
					"name": " QHTOD-T67 (1.0) [iAdmin] A task of another user's list is removed [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 400 Bad Request.'] = responseCode.code === 400;",
									"tests['Body is corect: You are inactive admin and you can not update anything.'] = data.message === \"You are inactive admin and you can't update anything.\";",
									"tests['Responese time is < 400ms.'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"{{$timestamp}} title\",\n\t\"remove_task_id\" : 100\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"131"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a91eb16a-3be7-4b65-ae42-249f8188fc3a",
					"name": "QHTOD-T80 (1.0) [aUser] Share a list with two other active users in one call [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"Column count doesn't match value count at row 1\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"list_title\": \"listale322222x {{$randomInt}}\" ,\n\t\"shared_with_user_id\": [434, 344]\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/130",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								"130"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "48dd7fb5-9767-4169-8e68-b48baba8958b",
			"name": "Update User",
			"item": [
				{
					"_postman_id": "021200f1-31d5-4868-a1d6-4550ff398073",
					"name": "Update with username: test0002",
					"item": [
						{
							"_postman_id": "5380cf50-d1be-4cb1-b541-016efe8108ad",
							"name": "[aUser] Update first_name, surname, username with valid credentials and leave mail empty [N]",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"postman.getEnvironmentVariable(\"lists\");",
											"",
											"var data = JSON.parse(responseBody);",
											"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
											"tests['Body is corect'] = data.message === \"Duplicate entry '' for key 'mail_UNIQUE'\";",
											"tests['Responese time is < 200ms'] = responseTime < 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "password",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\" : \"ivansd\",\n\t\"surname\" : \"ivanovds\",\n\t\"username\" : \"test0002\",\n\t\"mail\" : \"\"\n}"
								},
								"url": {
									"raw": "localhost:3000/users",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "1692a784-a77c-4963-a576-b996bff3740e",
							"name": "[aUser] Update first_name and username [P] ",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"postman.getEnvironmentVariable(\"lists\");",
											"",
											"var data = JSON.parse(responseBody);",
											"tests['Status code is 200 OK'] = responseCode.code === 200;",
											"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
											"tests['Responese time is < 200ms'] = responseTime < 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "password",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\" : \"update f name\", \n\t\"username\" : \"test0002\" \n}"
								},
								"url": {
									"raw": "localhost:3000/users",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "0d9a4083-100d-4fa8-b06b-b56945b32aa7",
							"name": "[aUser] Update first_name, surname and username [P]",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"postman.getEnvironmentVariable(\"lists\");",
											"",
											"var data = JSON.parse(responseBody);",
											"tests['Status code is 200 OK'] = responseCode.code === 200;",
											"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
											"tests['Responese time is < 200ms'] = responseTime < 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "password",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\" : \"update f name\", \n\t\"surname\" : \"nekvo ime\",\n\t\"username\" : \"test0002\" \n}"
								},
								"url": {
									"raw": "localhost:3000/users",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "0747bbf6-fcf1-40d9-8ba8-7f14a77b4bc4",
							"name": "[aUser] Update first_name, surname, username and mail with valid credentials [P] ",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"postman.getEnvironmentVariable(\"lists\");",
											"",
											"var data = JSON.parse(responseBody);",
											"tests['Status code is 200 OK'] = responseCode.code === 200;",
											"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
											"tests['Responese time is < 200ms'] = responseTime < 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "password",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\" : \"name\",\n\t\"surname\" : \"surname\",\n\t\"username\" : \"test0002\",\n\t\"mail\" : \"mail@abv.bg\"\n}"
								},
								"url": {
									"raw": "localhost:3000/users",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "9a1d6aaf-2d65-4959-a95c-c0c352f06ead",
							"name": "[aUser] Update first_name, username and mail [P] ",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"postman.getEnvironmentVariable(\"lists\");",
											"",
											"var data = JSON.parse(responseBody);",
											"tests['Status code is 200 OK'] = responseCode.code === 200;",
											"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
											"tests['Responese time is < 200ms'] = responseTime < 200;"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "password",
											"value": "test0002",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\" : \"update {{$randomInt}} name\", \n\t\"username\" : \"test0002\",\n\t\"mail\" : \"chikiriki{{$randomInt}}@mail.bg\"\n}"
								},
								"url": {
									"raw": "localhost:3000/users",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"users"
									]
								}
							},
							"response": []
						}
					],
					"description": "Casese can be tasted with another username.",
					"_postman_isSubFolder": true
				},
				{
					"_postman_id": "59afea90-3af4-4c8d-854d-868536e60f72",
					"name": "[aUser] Leave first_name, surname, username and mail empty [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"\",\n\t\"surname\" : \"\",\n\t\"username\" : \"\",\n\t\"mail\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "9d761739-6150-4abe-8d22-25079ea3fb0a",
					"name": "[aAdmin] Update of a specific user's first_name and surname [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\", \n\t\"surname\" : \"{{$randomInt}}newname\"  \n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=581",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "581"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "4fcc332f-5f37-4b58-8607-2f5c8bbc64ea",
					"name": "[aUser] Update first_name, surname, mail with valid credentials and type invalid username (13 symbols) [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"update f name\", \n\t\"surname\" : \"nekvo ime\",\n\t\"username\" : \"test0002test0\" \n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "e769ea88-629f-496d-8784-cbc31b386425",
					"name": "[aUser] Update first_name, surname, mail with valid credentials and type invalid username (2 symbols) [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"update f name\", \n\t\"surname\" : \"nekvo ime\",\n\t\"username\" : \"te\" \n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1516220f-451d-4211-9a2b-81316f6c316e",
					"name": "[aUser] Update first_name, surname with credentials and type invalid username (13 symbols) and mail (empty mail) [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"update f name\", \n\t\"surname\" : \"nekvo ime\",\n\t\"username\" : \"test0002test0\",\n\t\"mail\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0e6ed8f2-25de-49ff-a67e-6be3fb6ef8ec",
					"name": "[aUser] Update first_name, surname with credentials and type invalid username (2 symbols) and mail (empty mail) [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"update f name\", \n\t\"surname\" : \"nekvo ime\",\n\t\"username\" : \"te\",\n\t\"mail\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "098044c1-0021-43c1-9ad5-9cb0779374b1",
					"name": "[aUser] Update first_name and mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"mail\" : \"{{$randomInt}}meil@dir.bg\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "f68c6a33-c011-4eb1-8406-67365db038ee",
					"name": "[aUser] Update first_name and surname [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"surname\" : \"{{$randomInt}} maaan\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "6940fa6c-49a8-4cbc-842f-220cf14d94cb",
					"name": "[aAdmin] Update of a specific user's first_name, surname and mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 589 and username: test0007 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"surname\" : \"{{$randomInt}} family\",\n\t\"mail\" : \"ico@{{$randomInt}}.hazard\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=589",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "589"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "ff1355af-d08d-4b3a-b5b0-470db0eff457",
					"name": "[aAdmin] Update of a specific user's first_name and mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\", \n\t\"mail\" : \"{{$randomInt}}newmail@bbg.bg\"  \n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=581",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "581"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1c66f08c-2e3a-4bdc-8be1-0f84bf5741b4",
					"name": "[aAdmin] Update of a specific user's first_name, surname and username [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Duplicate entry '' for key 'mail_UNIQUE'\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"surname\" : \"{{$randomInt}} family\",\n\t\"username\" : \"{{$randomInt}}.hazard\" \n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "05462785-fef8-46fe-8628-4dca9508243c",
					"name": "[aUser] Update first_name, surname, mail with valid credentials and leave username empty [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"surname\" : \"{{$randomInt}} maaan\",\n\t\"mail\" : \"{{$randomInt}}newmail@bbg.bg\",\n\t\"username\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "049fcb2b-bb81-406a-9bda-f6350dfd37f9",
					"name": "[aAdmin] Update of a specific user's first_name and username [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Account with ID: 585 and username: test0006 is updated sucessfully.\";",
									"tests['Responese time is < 250ms'] = responseTime < 250;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\", \n\t\"username\" : \"userN {{$randomInt}}\"  \n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a321381d-9f1d-4fe1-b444-8b2c47fc741d",
					"name": "[iAdmin] Update a specific user's first_name, surname, username and mail [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"You are inactive admin and you can't update anything.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"surname\" : \"{{$randomInt}} maaan\",\n\t\"mail\" : \"{{$randomInt}}newmail@bbg.bg\",\n\t\"username\" : \"test0022\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=581",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "581"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "acaa9dd8-b5da-4302-86fc-6dddbbc8941f",
					"name": "[aUser] Update first_name, surname and mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"surname\" : \"{{$randomInt}} maaan\",\n\t\"mail\" : \"{{$randomInt}}newmail@bbg.bg\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "12891282-32c8-45d2-bd25-edb633208e4c",
					"name": "[aAdmin] Update of a specific user's first_name, surname, mail with valid credentials and leave username empty [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"surname\" : \"{{$randomInt}} family\",\n\t\"username\" : \"\",\n\t\"mail\" : \"dsd@{{$randomInt}}.hazard\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "efb22049-761f-4508-b36c-5e838059d007",
					"name": "[aAdmin] Update of a specific user's first_name, surname and username and leave mail field empty [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"Duplicate entry '' for key 'mail_UNIQUE'\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"surname\" : \"{{$randomInt}} family\",\n\t\"username\" : \"{{$randomInt}}.hazard\",\n\t\"mail\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "94ca873f-05fc-4b3e-ba6d-fc281705d1c0",
					"name": "[aAdmin] Update of a specific user's first_name [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 589 and username: test0007 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\" \n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=589",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "589"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "53e5a022-5423-4e0c-89c2-7a83fbd1db54",
					"name": " QHTOD-T117 (1.0) [aAdmin] Update of a specific user's surname, username and mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"surname\" : \"{{$randomInt}} name\",\n\t\"username\" : \"nameN {{$randomInt}}32\",\n\t\"mail\" : \"fsdfds{{$randomInt}}@d.ww\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "df6f4533-bc4e-463b-a145-d1acfd1c8cd1",
					"name": " QHTOD-T125 (1.0) [aUser] Update of a specific user's first_name, surname, username and mail with empty fields [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"\",\n\t\"surname\" : \"\",\n\t\"username\" : \"\",\n\t\"mail\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "3b5a29e7-ced5-4d68-b964-f829c5565b06",
					"name": " QHTOD-T121 (1.0) [aAdmin] Update of a specific user's first_name, surname, mail with valid credentials and type invalid username (2 symbols) [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"fdsfsdf{{$randomInt}}\",\n\t\"surname\" : \"dsfsdf{{$timestamp}}\",\n\t\"username\" : \"us\",\n\t\"mail\" : \"fdsfsdfs\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "41d5dea3-5f76-434d-a718-a5388417c15e",
					"name": " QHTOD-T122 (1.0) [aAdmin] Update of a specific user's first_name, surname, mail with valid credentials and type invalid username (13 symbols) [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"ico {{$randomInt}} hazard\",\n\t\"surname\" : \"{{$randomInt}} family\",\n\t\"username\" : \"1234567890000\",\n\t\"mail\" : \"dsd@{{$randomInt}}.hazard\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "074d4cd3-c190-4a80-a767-1ea7f8fb79b3",
					"name": " QHTOD-T118 (1.0) [aAdmin] Update of a specific user's first_name, surname, username and mail with valid credentials [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"fdsfsdf{{$randomInt}}\",\n\t\"surname\" : \"dsfsdf{{$timestamp}}\",\n\t\"username\" : \"user{{$randomInt}}\",\n\t\"mail\" : \"fdsfsdfs\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "6a6ce29e-f1c6-456a-bd01-9432c94975e9",
					"name": " QHTOD-T124 (1.0) [aAdmin] Update of a specific user's first_name, surname with credentials and type invalid username (13 symbols) and mail (empty mail) [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"fdsfsdf{{$randomInt}}\",\n\t\"surname\" : \"dsfsdf{{$timestamp}}\",\n\t\"username\" : \"user{{$randomInt}}use{{$randomInt}}\",\n\t\"mail\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7aadb693-b51c-4ec5-a445-8e0e103a0bb3",
					"name": " QHTOD-T112 (1.0) [aAdmin] Update of a specific user's surname and mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"surname\" : \"{{$randomInt}} name\",\n\t\"mail\" : \"meil{{$randomInt}}@ff.ff\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=581",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "581"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d4d43bfe-b345-41ae-bc03-4d49759b3531",
					"name": " QHTOD-T105 (1.0) [aAdmin] Update of a specific user's surname [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"surname\" : \"{{$randomInt}} name\" \n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=581",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "581"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "e6c86fa1-a85e-4f09-a88e-569f9c4632ef",
					"name": " QHTOD-T111 (1.0) [aAdmin] Update of a specific user's surname and username [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"surname\" : \"{{$randomInt}} name\",\n\t\"username\" : \"nameN {{$randomInt}}32\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "e28ff6bb-bd65-4ea3-b6bf-097d25bb9c26",
					"name": " QHTOD-T106 (1.0) [aAdmin] Update of a specific user's mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"mail\" : \"meil{{$randomInt}}@ff.ff\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=581",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "581"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0fd91a97-f5ce-48fa-b1b3-b69af333e497",
					"name": " QHTOD-T123 (1.0) [aAdmin] Update of a specific user's first_name, surname with credentials and type invalid username (2 symbols) and mail (empty mail) [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"fdsfsdf{{$randomInt}}\",\n\t\"surname\" : \"dsfsdf{{$timestamp}}\",\n\t\"username\" : \"us\",\n\t\"mail\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "52c2e923-df1c-4b99-8859-9ebf4da0ab9b",
					"name": " QHTOD-T116 (1.0) [aAdmin] Update of a specific user's first_name, username and mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data. Check input data and have in mind that username must be between 3 and 12\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"fdsfsdf{{$randomInt}}\", \n\t\"username\" : \"userN{{$randomInt}}\",\n\t\"mail\" : \"meil{{$randomInt}}@ff.ff\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "98467a7d-90fe-44ed-84a5-8caac2c8dfe3",
					"name": " QHTOD-T107 (1.0) [aAdmin] Update of a specific user's username [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"nameN {{$randomInt}}32\"  \n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "ac644261-c817-45d3-ae97-01f4f481c0d7",
					"name": " QHTOD-T113 (1.0) [aAdmin] Update of a specific user's username and mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\" : \"nameN {{$randomInt}}32\",\n\t\"mail\" : \"fsdfds{{$randomInt}}@d.ww\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "52a83912-4b5e-4f86-aa9b-10422c4b63b7",
					"name": " QHTOD-T84 (1.0) [aUser] Update only mail with valid credentials [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"mail\" : \"nameN@{{$randomInt}}32.bg\"  \n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "5f09c348-e381-4d6e-94b6-519868b2c85a",
					"name": " QHTOD-T156 (1.0) [iUser] Update first_name, surname, username and mail [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"You are inactive user and you can't update anything.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDM6dGVzdDAwMDM="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\": \"gosho N {{$randomInt}}\",\n\t\"surname\" : \"surname N {{$randomInt\",\n\t\"username\" : \"nameN {{$randomInt}}32\",\n\t\"mail\" :\"dsadasdas@dad.dd\"\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7c4fa330-6426-43a1-9e31-a2a56d66f308",
					"name": " QHTOD-T90 (1.0) [aUser] Update surname and mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"surname\":\"Ivanchov {{$randomInt}}\",\n\t\"mail\" : \"nameN@{{$randomInt}}32.bg\"  \n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "77fb8299-57f6-4d4b-931c-106c26332a36",
					"name": " QHTOD-T83 (1.0) [aUser] Update only surname [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"surname\" : \"Ivanov {{$randomInt}}32.bg\"  \n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "5483a7f7-d1a0-48a6-920a-4a3371b083cc",
					"name": " QHTOD-T82 (1.0) [aUser] Update only first_name [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.getEnvironmentVariable(\"lists\");",
									"",
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Account with ID: 581 and username: test0002 is updated sucessfully.\";",
									"tests['Responese time is < 500ms'] = responseTime < 500;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\" : \"nameN {{$randomInt}}32\"  \n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "749db8ef-92de-43c2-8102-f4cf1903d922",
			"name": "Update Task",
			"item": [
				{
					"_postman_id": "8b3426c2-a2fd-4e81-98b7-3c999511d012",
					"name": " QHTOD-T197 (1.0) [aAdmin] Update another user's task description with no symbols [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Task with task_title: 787 some tekst new 1532506527 ,task_description:  and task_status: Not Started of list 127 is sucessfully updated.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_desc\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=393",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "393"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "35de0635-ed0a-4527-a531-28a50e8422c7",
					"name": " QHTOD-T198 (1.0) [aAdmin] Update another user's task status with valid data [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Task with task_title: 814 title 1532507361 ,task_description: null and task_status: In Progress of list 128 is sucessfully updated.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_status\" : \"In Progress\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=394",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "394"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "cab64503-f8a9-44e3-8118-febeaaf188d6",
					"name": " QHTOD-T194 (1.0) [aAdmin] Update another user's task title [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Task with task_title: 752 tasck title ,task_description: null and task_status: Finished of list 128 is sucessfully updated.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} tasck title\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=413",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "413"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c3fb8bdb-6cba-4f24-8c6e-fad5b5e85f32",
					"name": " QHTOD-T204 (1.0) [aAdmin] Update own task title, description and status [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Task with task_title: 752 tasck title ,task_description: null and task_status: Finished of list 128 is sucessfully updated.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_desc\" : \"{{$randomInt}} task desc\",\n\t\"task_status\" : \"In Progress\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=418",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "418"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1ca7db3e-5bf8-414c-96eb-a1df24c7c2d5",
					"name": " QHTOD-T203 (1.0) [aAdmin] Update the status of the task with invalid data of another user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_desc\" : \"{{$randomInt}} task desc\",\n\t\"task_status\" : \"test\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": "with status \"test\""
					},
					"response": []
				},
				{
					"_postman_id": "5b29caae-a84e-4151-a7cd-88cf6af9c8e6",
					"name": " QHTOD-T203 (1.0) [aAdmin] Update the status of the task with invalid data of another user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_desc\" : \"{{$randomInt}} task desc\",\n\t\"task_status\" : \"2\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": "with status \"2\""
					},
					"response": []
				},
				{
					"_postman_id": "3d70c967-8ca3-4a5a-ab17-708a675d2d63",
					"name": " QHTOD-T200 (1.0) [aAdmin] Update the task description and status of another user [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_desc\" : \"{{$randomInt}} task desc\",\n\t\"task_status\" : \"Finished\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=416",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "416"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "3be3c3f0-b27b-4a22-bd0d-b16df4f42727",
					"name": " QHTOD-T196 (1.0) [aAdmin] Update the task description of another user [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_desc\" : \"{{$randomInt}} task desc\" \n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=414",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "414"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "20670754-bf33-4a89-8ad7-d654d24aad18",
					"name": " QHTOD-T195 (1.0) [aAdmin] Update the task title and description of another user [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_desc\" : \"{{$randomInt}} task desc\" \n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=414",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "414"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "ca91581b-c306-471f-97d4-80aed101d67a",
					"name": " QHTOD-T199 (1.0) [aAdmin] Update the task title and status of another user [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_status\" : \"In Progress\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=411",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "411"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "32a9c62c-6f1b-410a-9e59-de001baa4cc6",
					"name": " QHTOD-T201 (1.0) [aAdmin] Update the task title, description and status of another user [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_desc\" : \"{{$randomInt}} task desc\",\n\t\"task_status\" : \"Not Started\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=411",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "411"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "dcb99402-a252-4598-b13f-24cf54d51f4a",
					"name": " QHTOD-T202 (1.0) [aAdmin] Update the the task title with no symbols \"\" of another user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data for task title. It must be at least 1 symbol\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"\" \n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=411",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "411"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "2f1279e3-c8a7-4b03-a77d-19d5f740ca83",
					"name": " QHTOD-T184 (1.0) [aUser] Update only task status with valid data [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data. Check input data for task title. It must be at least 1 symbol\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_status\" : \"Not Started\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=413",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "413"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "62284fb4-96aa-40e4-980c-2dd6b776c26d",
					"name": " QHTOD-T182 (1.0) [aUser] Update only the task description [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data. Check input data for task title. It must be at least 1 symbol\";",
									"tests['Responese time is < 250ms'] = responseTime < 250;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_desc\" : \"{{$randomInt}} Not Started\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=413",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "413"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "c288dc51-1b95-428e-bc58-3402c369079b",
					"name": " QHTOD-T183 (1.0) [aUser] Update only the task description with no symbols \"\" [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data. Check input data for task title. It must be at least 1 symbol\";",
									"tests['Responese time is < 250ms'] = responseTime < 250;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_desc\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=413",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "413"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "10843a4f-eded-4124-938e-7b5ebcd72b0e",
					"name": " QHTOD-T180 (1.0) [aUser] Update only the task title [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Invalid data. Check input data for task title. It must be at least 1 symbol\";",
									"tests['Responese time is < 250ms'] = responseTime < 250;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=413",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "413"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "81fc0b08-8ef4-4d41-9f58-e73dd812be77",
					"name": " QHTOD-T189 (1.0) [aUser] Update the status of the task with invalid data [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 250ms'] = responseTime < 250;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_status\" : \"{{$timestamp}}\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=413",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "413"
								}
							]
						},
						"description": " with {{$timestamp}}"
					},
					"response": []
				},
				{
					"_postman_id": "9651f6ae-e0a8-4109-8d85-c16e03699150",
					"name": " QHTOD-T189 (1.0) [aUser] Update the status of the task with invalid data [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 250ms'] = responseTime < 250;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_status\" : \"0\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=413",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "413"
								}
							]
						},
						"description": " with \"0\""
					},
					"response": []
				},
				{
					"_postman_id": "c3c899b7-ab82-45b3-afe2-b3dd552b6f75",
					"name": " QHTOD-T186 (1.0) [aUser] Update the task description and status [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Wrong input data. Task status must be Not Started, In Progress or Finished\";",
									"tests['Responese time is < 400ms'] = responseTime < 400;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_desc\" : \"{{$randomInt}} Not Started\",\n\t\"task_status\" : \"In Progress\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=413",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "413"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "615cadb6-475e-40d9-851c-89f1f6168f44",
					"name": " QHTOD-T190 (1.0) [aUser] Update the task title and description of another user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"Task with ID:421 doesn't belong to this user\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_desc\" : \"{{$randomInt}} task desc\" \n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=421",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "421"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "b9b09a58-0edd-4f74-adb5-d5904255cacc",
					"name": " QHTOD-T181 (1.0) [aUser] Update the task title and description [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 ОК'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Task with ID:421 doesn't belong to this user\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_desc\" : \"{{$randomInt}} task desc\" \n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "b061acc1-7439-4bf9-8453-059a96f7fc92",
					"name": " QHTOD-T185 (1.0) [aUser] Update the task title and status [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 ОК'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Task with ID:421 doesn't belong to this user\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_status\" : \"Not Started\" \n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "94d2950b-0aa0-48c2-a32e-d3039681e66e",
					"name": " QHTOD-T187 (1.0) [aUser] Update the task title, description and status [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 ОК'] = responseCode.code === 200;",
									"//tests['Body is corect'] = data.message === \"Task with ID:421 doesn't belong to this user\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_desc\" : \"{{$randomInt}} task desc\",\n\t\"task_status\" : \"Finished\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "d09afd6a-fbd3-45e2-b797-fb987754fa21",
					"name": " QHTOD-T188 (1.0) [aUser] Update the the task title with no symbols \"\" [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data for task title. It must be at least 1 symbol\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "b4bee848-f121-4db0-9686-7e1583fedb11",
					"name": " QHTOD-T205 (1.0) [iAdmin] Update the task title, description and status of another user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad Request'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"You are inactive admin and you can't update anything.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$randomInt}} task title\",\n\t\"task_desc\" : \"{{$randomInt}} task desc\",\n\t\"task_status\" : \"Finished\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "bc0f8f30-6645-4266-92b0-4b92e4d7d4a5",
					"name": " QHTOD-T191 (1.0) [iUser] Update task title and desription [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 conflict'] = responseCode.code === 409;",
									"tests['Body is corect'] = data.message === \"Invalid data. Check input data for task title. It must be at least 1 symbol\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDM6dGVzdDAwMDM="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"\" \n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "c449e1e5-b6e5-4f2b-91f9-2e386ad427a9",
					"name": " QHTOD-T192 (1.0) [iUser] Update the task title and description of another user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 400 Bad REquest'] = responseCode.code === 400;",
									"tests['Body is corect'] = data.message === \"You are inactive user and you can't update anything.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDM6dGVzdDAwMDM="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$timestamp}} random user\",\n\t\"task_desc\" : \"{{$randomInt}} msg\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": " "
					},
					"response": []
				},
				{
					"_postman_id": "fa094113-eefd-427e-9616-652f6faeb0df",
					"name": " QHTOD-T193 (1.0) [noAuth] Update the task title and description of another user [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Unauthorized users can't update user information\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDM6dGVzdDAwMDM=",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"task_title\" : \"{{$timestamp}} random user\",\n\t\"task_desc\" : \"{{$randomInt}} msg\"\n}"
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=417",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "417"
								}
							]
						},
						"description": " "
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "1cb50be3-824c-4125-8094-27c3d78fde6d",
			"name": "Delete List (Choose the right environment)",
			"item": [
				{
					"_postman_id": "ee87277a-70c5-46a4-9b8e-9ddcfebef1e6",
					"name": "Execute to get the new list id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f1c195a3-50e4-4457-a988-ba8331432e08",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"deleteListID\", data[0].list_id);"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"perfect10\",\n    \"list_description\" : \"short desc\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								""
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b3ef3043-7af1-40a7-b961-d5994625a803",
					"name": "QHTOD - 142 [aUser] Delete his own list [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7adf78eb-0cc0-496d-b89e-407d9a4fd4b3",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"'Message: List is successfully deleted.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is successfully deleted.\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id={{deleteListID}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "{{deleteListID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b493b359-ed77-4eeb-ad2d-39ec3782f243",
					"name": "QHTOD - 143 [aUser] Try to delete list of another user [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4114033e-6914-439f-a776-a9bc5b5d24dc",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Message: You do not own list with id... is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"You do not own list with id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "5d2277d3-281f-4377-a392-2a07e9ae7ff1",
					"name": "QHTOD - 144 [iUser] Try to delete his own list [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d5195eb-3d78-40cc-8891-441eb5c95d85",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"'Message: Account disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inact_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=131",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "131"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "05c321f7-665d-45d0-9a8f-2bcd1501fbd8",
					"name": "QHTOD - 147 [iUser] Try to delete list of another user [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8efcca33-351b-441a-a78f-16c17f0ecdf0",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"'Message: Account disabled.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inact_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=114",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "114"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "536da316-3118-4701-a064-3217e0fe5d3e",
					"name": "Execute to get the new list id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a7d7d891-a7c3-4227-9d57-9bcb35696eb2",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"deleteListID2\", data[0].list_id);"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"perfect10\",\n    \"list_description\" : \"short desc\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								""
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "65e9837f-a5be-4ab5-90c8-aa4b59a8a679",
					"name": "QHTOD - 148 [aAdmin] Delete his own list [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c4b41b01-ba69-415d-b951-9a0792275774",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"'Message: List 19 is successfully deleted.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is successfully deleted.\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id={{deleteListID2}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "{{deleteListID2}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "98c2287f-8382-49a6-9ee2-f3efa6b56a0f",
					"name": "Execute to get the new list id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "209da117-286d-4e0c-9add-c1f36c54b920",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"deleteListID3\", data[0].list_id);"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "act_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"list_title\": \"perfect10\",\n    \"list_description\" : \"short desc\"\n}"
						},
						"url": {
							"raw": "localhost:3000/lists/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists",
								""
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "f3bcbdb1-3e17-4a31-97a8-81cecd244123",
					"name": "QHTOD - 149 [aAdmin] Delete list of another user [P]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "787ecd6b-1003-47be-8adf-6104bad62ea4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"'is successfully deleted.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is successfully deleted.\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id={{deleteListID3}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "{{deleteListID3}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d2ed2c3d-e99b-495d-90f7-76ed0a31fd90",
					"name": "QHTOD - 152 [iAdmin] Delete his own list [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9145d5a2-ba4d-4537-a078-580a76334df8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account disabled' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=129",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "129"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "2c355975-54c2-4cf5-9013-b16f87d6c256",
					"name": "QHTOD - 153 [iAdmin] Try to delete list of another user [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e67563f9-03e4-4e64-8edb-a76b3a1edfd4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Account disabled' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "inactad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=130",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "130"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "314fdb7d-cf4c-43f6-9b44-0843142dee83",
					"name": "QHTOD - 154 [noAuth] Try to delete list [N]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b387540c-ef88-4a8e-b314-9dff7f8f0fa6",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message: 'Authorization required.' is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=114",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "114"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "de9567f5-414f-4db2-b37e-1051fcfe5aff",
			"name": "Delete Task",
			"item": [
				{
					"_postman_id": "b9e81cb2-8ee5-4e86-892e-cda172461611",
					"name": " W QHTOD-T207 (1.0) [aUser] Delete a task from own list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Task 181 'some tekst 977' in list 127 '459 listalex' is successfully deleted.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=181",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "181"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "8ffe0c36-6ecb-4614-a1f9-8ac538521e2d",
					"name": "W QHTOD-T213 (1.0) [aAdmin] Delete a task from your own list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Task 263 '858 some tekst new 1532069776' in list 127 '459 listalex' is successfully deleted.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=263",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "263"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "69331826-b8ab-44c7-a649-4894738368a7",
					"name": "W  QHTOD-T215 (1.0) [aAdmin] Delete a task from shared list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Task 269 '858 some tekst new 1532069776' in list 127 '459 listalex' is successfully deleted.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=269",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "269"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b1c4a4e5-40d3-4dd8-9fd1-0671b516d78c",
					"name": " QHTOD-T208 (1.0) [aUser] Delete a task from another user's list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 404 Not Found'] = responseCode.code === 404;",
									"tests['Body is corect'] = data.message === \"Task 128 does not exist!\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "85ea0bd8-947f-485e-8565-17d029359385",
					"name": " QHTOD-T209 (1.0) [aUser] Delete a task from shared list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 403 Forbidden'] = responseCode.code === 403;",
									"tests['Body is corect'] = data.message === \"Task 233 is in a shared list.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=233",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "233"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "edbcb7c0-57cf-4c6f-ab6a-6409739dc9db",
					"name": " QHTOD-T214 (1.0) [aAdmin] Delete a task from another user's list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Task 110 was already deleted!\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=110",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "110"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "f9329bec-5583-4154-9814-297147175cc6",
					"name": " QHTOD-T216 (1.0) [iAdmin] Delete a task from own list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "acdfaaa5-ce46-44c5-9f50-21c6247f2c3c",
					"name": " QHTOD-T217 (1.0) [iAdmin] Delete a task from another user's list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=211",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "211"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "cbad3806-f757-43f7-a27b-45010f7c2471",
					"name": " QHTOD-T218 (1.0) [iAdmin] Delete a task from shared list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=101",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "101"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "fdcf94fc-ee6e-4e11-83db-7a9f8e72389a",
					"name": " QHTOD-T219 (1.0) [noAuth] Delete a task from a random user's list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Authorization required.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDQ6dGVzdDAwMDQ=",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=101",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "101"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "8b04001a-34b5-4507-ae61-33c546789501",
					"name": " QHTOD-T220 (1.0) [aUser] Try to delete a task which is already deleted [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Task 229 was already deleted!\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDI6dGVzdDAwMDI="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=229",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "229"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b1bf759c-3d89-4b4a-ac09-3b2fda56fcfd",
					"name": " QHTOD-T221 (1.0) [aAdmin] Try to delete your own task which is already deleted [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Task 114 was already deleted!\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=114",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "114"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "17a92589-3ad8-4473-b39d-7bf920638259",
					"name": " QHTOD-T222 (1.0) [aAdmin] Try to delete another user's task which is already deleted [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"tests['Body is corect'] = data.message === \"Task 110 was already deleted!\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDE6dGVzdDAwMDE="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=110",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "110"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "f2d1960f-622c-44a0-9a3f-4c81ff13a5dc",
					"name": " QHTOD-T210 (1.0) [iUser] Delete a task from another user's list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDM6dGVzdDAwMDM="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=101",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "101"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c420e310-700c-428d-93de-216f27596a89",
					"name": " QHTOD-T212 (1.0) [iUser] Delete a task from shared list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDM6dGVzdDAwMDM="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=94",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "94"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "462c083f-9540-4f79-b724-bd51efbe4ed9",
					"name": " QHTOD-T211 (1.0) [iUser] Delete a task from your own list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Body is corect'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDAwMDM6dGVzdDAwMDM="
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/tasks?task_id=263",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "task_id",
									"value": "263"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "5d71e9e2-898c-4ff8-b4e3-946eb833d8d9",
			"name": "Delete User",
			"item": [
				{
					"_postman_id": "af2e28c4-6e0c-410d-ade6-65841c9e0983",
					"name": "Create user with unique username and mail as active admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c22b4e27-52e8-4a87-855f-0130e350a816",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"'id' of the user is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"deleteAdminByID\", data.id);"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"{{$timestamp}}@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 1\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						},
						"description": "Create user with unique username and mail."
					},
					"response": []
				},
				{
					"_postman_id": "f8d539bc-2a8a-4b8d-9d7a-82c9d2939d4c",
					"name": " QHTOD-T226 (1.0) [aAdmin] Delete an active admin by user ID [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "378123f9-ea13-4913-85bf-5cb9be61532f",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is successfully deleted.\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?user_id={{deleteAdminByID}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{deleteAdminByID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "020e4fe4-e1f5-4764-80e5-9c49aaebf80d",
					"name": "Create user with unique username and mail as active user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2e92cd47-be4d-447e-8d29-4375c7b6d244",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"'id' of the user is present\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"deleteUserByID\", data.id);"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Name{{$randomInt}}\",\n    \"surname\" : \"Vlasic{{$randomInt}}\",\n    \"username\": \"{{$timestamp}}\",\n    \"mail\": \"{{$timestamp}}@abv.bg\",\n    \"password\": \"blablapass\",\n    \"is_admin\": 0\n}"
						},
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						},
						"description": "Create user with unique username and mail."
					},
					"response": []
				},
				{
					"_postman_id": "ea025609-2f89-4b4a-8290-385b8bed68f3",
					"name": " QHTOD-T223 (1.0) [aAdmin] Delete a user by user ID [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "23f0dd62-52c3-45f9-87f4-62a993e3fd62",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is successfully deleted.\");",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?user_id={{deleteUserByID}}",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{deleteUserByID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "739e70d8-59cd-4623-a312-99775a244b58",
					"name": " QHTOD-T231 (1.0) [aAdmin] Delete your own account by mail [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "381bca52-0108-4630-8ec8-ff66457840bd",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Returned message is correct'] = data.message === \"Action denied! Self-destruct is against the basic humanity! Go reproduce you self\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?mail=nameN@532.bg",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "mail",
									"value": "nameN@532.bg"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "443ed42d-69d8-477e-af18-f36c0eb00c3b",
					"name": " QHTOD-T229 (1.0) [aAdmin] Delete your own account by user ID [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "381bca52-0108-4630-8ec8-ff66457840bd",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Returned message is correct'] = data.message === \"Action denied! Self-destruct is against the basic humanity! Go reproduce you self\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?user_id=580",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "580"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a499da6d-aa43-45a2-823c-6c69c7adc395",
					"name": " QHTOD-T230 (1.0) [aAdmin] Delete your own account by username [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "381bca52-0108-4630-8ec8-ff66457840bd",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"tests['Returned message is correct'] = data.message === \"Action denied! Self-destruct is against the basic humanity! Go reproduce you self\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?username=test0001",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "test0001"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "91cc9719-dba5-4e53-ad8e-e6e49dc3ff57",
					"name": " QHTOD-T235 (1.0) [aUser] Delete a user by mail [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a15d1cdc-53a8-4364-9db7-8e33c4661f92",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden'] = responseCode.code === 403;",
									"tests['Returned message is correct'] = data.message === \"You don't have permissions to delete users.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?mail=1532595346@abv.bg",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "mail",
									"value": "1532595346@abv.bg"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "8b47534a-4c93-4eaa-942d-c0f31335a3ea",
					"name": " QHTOD-T233 (1.0) [aUser] Delete a user by user ID [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a15d1cdc-53a8-4364-9db7-8e33c4661f92",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden'] = responseCode.code === 403;",
									"tests['Returned message is correct'] = data.message === \"You don't have permissions to delete users.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?user_id=4259",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "4259"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1d92af29-e527-4e27-b535-4c50fce5626c",
					"name": " QHTOD-T234 (1.0) [aUser] Delete a user by username [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a15d1cdc-53a8-4364-9db7-8e33c4661f92",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden'] = responseCode.code === 403;",
									"tests['Returned message is correct'] = data.message === \"You don't have permissions to delete users.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?username=Name251",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "Name251"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "5df61286-6de9-404a-88b6-d342acb7fe13",
					"name": " QHTOD-T245 (1.0) [aUser] Delete your own account [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b0121b38-7f18-4c64-af1a-28f03b5e887f",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 403 Forbidden'] = responseCode.code === 403;",
									"tests['Returned message is correct'] = data.message === \"You don't have permissions to delete users.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?user_id=581",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "581"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "954ddffd-1592-4090-bbe2-4eee5e0fa817",
					"name": " QHTOD-T241 (1.0) [iAdmin] Delete a user by mail [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3205934-482d-4e01-b14a-00f51d45a18f",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Returned message is correct'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?mail=mail856@asd.bg",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "mail",
									"value": "mail856@asd.bg"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1b5dd4c3-53f6-4628-966e-c8bf04266859",
					"name": " QHTOD-T239 (1.0) [iAdmin] Delete a user by user ID [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3205934-482d-4e01-b14a-00f51d45a18f",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Returned message is correct'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "20ce4836-7008-40d6-a222-baa8c93f33b5",
					"name": " QHTOD-T240 (1.0) [iAdmin] Delete a user by username [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3205934-482d-4e01-b14a-00f51d45a18f",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Returned message is correct'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?username=test0003",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "test0003"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "6239c737-9ee1-4081-9795-8c2abddfd99d",
					"name": " QHTOD-T238 (1.0) [iUser] Delete a user by mail [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3205934-482d-4e01-b14a-00f51d45a18f",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Returned message is correct'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?mail=mail856@asd.bg",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "mail",
									"value": "mail856@asd.bg"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "104f0609-1119-4507-a6cd-d73cc7077daa",
					"name": " QHTOD-T236 (1.0) [iUser] Delete a user by user ID [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3205934-482d-4e01-b14a-00f51d45a18f",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Returned message is correct'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?user_id=585",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "585"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "f6e8ab17-9620-496a-af84-62a5aca761a5",
					"name": " QHTOD-T237 (1.0) [iUser] Delete a user by username [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3205934-482d-4e01-b14a-00f51d45a18f",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Returned message is correct'] = data.message === \"Account disabled.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?username=pesho497",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "pesho497"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7a3bc3aa-c090-47ec-834b-22c74f01cd10",
					"name": " QHTOD-T243 (1.0) [noAuth] Delete a user by username [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fafdd856-d6e1-4103-a6fa-1af2d42025b1",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Returned message is correct'] = data.message === \"Authorization required.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?username=pesho497",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "pesho497"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "21bfecc1-55f8-44f3-98b2-004a9d22e7a8",
					"name": " QHTOD-T242 (1.0) [noAuth] Delete a user by user ID [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fafdd856-d6e1-4103-a6fa-1af2d42025b1",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Returned message is correct'] = data.message === \"Authorization required.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?user_id=85",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "85"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d9894e64-53df-4ec8-8031-422920b09618",
					"name": " QHTOD-T244 (1.0) [noAuth] Delete a user by mail [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fafdd856-d6e1-4103-a6fa-1af2d42025b1",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"tests['Returned message is correct'] = data.message === \"Authorization required.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?mail=mail856@asd.bg",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "mail",
									"value": "mail856@asd.bg"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "41843d8c-d7f3-4671-9745-4f42c1b99369",
					"name": " QHTOD-T232 (1.0) [aAdmin] Try to delete already deleted account [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9f8c43d-fdef-43f2-931b-f5aa70a67007",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 404 Not Found'] = responseCode.code === 404;",
									"tests['Returned message is correct'] = data.message === \"No records changed.\";",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?user_id=4262",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "user_id",
									"value": "4262"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "34ff8db6-589a-4054-b3e9-45c3e9118f6a",
					"name": "W  QHTOD-T224 (1.0) [aAdmin] Delete a user by username [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0482999-17f8-4ca9-97d7-2afe914e2116",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is successfully deleted.\");",
									"});",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?username=1533022906",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "1533022906"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "cb071631-cc98-4379-8c3d-3f42d34fb755",
					"name": "W   QHTOD-T225 (1.0) [aAdmin] Delete a user by mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0482999-17f8-4ca9-97d7-2afe914e2116",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is successfully deleted.\");",
									"});",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?mail=1533022899@abv.bg",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "mail",
									"value": "1533022899@abv.bg"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1e2b275d-a6c1-4d17-9420-5da33ecde6b2",
					"name": "W    QHTOD-T227 (1.0) [aAdmin] Delete an active admin by username [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0482999-17f8-4ca9-97d7-2afe914e2116",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is successfully deleted.\");",
									"});",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?username=1533022862",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "1533022862"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "100fd643-c8a3-4f43-8c7a-fcc85c9f7728",
					"name": "W    QHTOD-T228 (1.0) [aAdmin] Delete an active admin by mail [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0482999-17f8-4ca9-97d7-2afe914e2116",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is successfully deleted.\");",
									"});",
									"tests['Responese time is < 200ms'] = responseTime < 200;",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "localhost:3000/users?mail=1533022834@abv.bg",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "mail",
									"value": "1533022834@abv.bg"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "7230e818-cad1-4259-902e-5fdbba4bd472",
			"name": "Restore Deleted Lists",
			"item": [
				{
					"_postman_id": "b37ae57d-54ed-4f87-b39c-abea48093e79",
					"name": "Precon of  QHTOD-T267 (1.0) [aAdmin] Restore another active admin's deleted list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c944ea6c-a9fd-432c-9238-d67cb668256b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=62",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "62"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "55a36f25-314d-47cf-9077-43f4c62bee0c",
					"name": " QHTOD-T267 (1.0) [aAdmin] Restore another active admin's deleted list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c209f69d-89ab-41b5-a8e8-dba5b05a9c19",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"and tasks are successfully restored.\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=62",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "62"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "accc5dd4-5817-40a1-9418-8b361d718af6",
					"name": " QHTOD-T266 (1.0) [aAdmin] Restore another active user's deleted list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c209f69d-89ab-41b5-a8e8-dba5b05a9c19",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"and tasks are successfully restored.\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=128",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "573a1a33-623f-471d-ab3b-5724c91ec960",
					"name": "Precon of  QHTOD-T266 (1.0) [aAdmin] Restore another active user's deleted list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "592ee350-3d3a-4011-8ce9-d700b943decb",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7640a9cd-fcc6-4f53-984d-aebf1b403079",
					"name": "Precon of  QHTOD-T265 (1.0) [aAdmin] Restore your own deleted list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e17f58af-caea-479f-b0c9-524899a9c777",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=116",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "116"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a02e5315-c7d4-421f-b6cd-b5c269281bee",
					"name": " QHTOD-T265 (1.0) [aAdmin] Restore your own deleted list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c209f69d-89ab-41b5-a8e8-dba5b05a9c19",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"and tasks are successfully restored.\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=116",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "116"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "bd7a22e1-147a-4cc6-93f7-46441f18c525",
					"name": " QHTOD-T275 (1.0) [aAdmin] Try to restore an active list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "67682fc4-8c26-48fe-b6c2-c1b3246f6511",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 409 Conflict'] = responseCode.code === 409;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The list is active. Action denied!\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=116",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "116"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "3f766b10-750e-4f46-9750-4e8812e117a6",
					"name": " QHTOD-T269 (1.0) [aUser] Restore another active user's deleted list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e357121b-7397-41c6-9ad3-be15a531ed49",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 403 Forbidden'] = responseCode.code === 403;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"You don't own this list. Action denied!\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=118",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "118"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "5189c9b9-158f-4f67-856a-db5a2d1d10cd",
					"name": " QHTOD-T268 (1.0) [aUser] Restore your own deleted list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9398da3c-217f-45ff-b191-d679e055f882",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"and tasks are successfully restored.\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0002",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0002",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=128",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "2dda439e-b693-473c-895f-4797ac952d40",
					"name": "Precon of   QHTOD-T268 (1.0) [aUser] Restore your own deleted list [P] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3b7d738-d92c-4765-963d-3285a1bf990f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									" "
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "actad_alex",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/lists?list_id=128",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "list_id",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "efb8ab7e-f868-4c58-aa5d-fdf1aa56abb3",
					"name": " QHTOD-T273 (1.0) [iAdmin] Restore another active user's deleted list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cea4dcc-243c-45ae-bec9-c8cd27e107ec",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=128",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "128"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "03be6944-a400-413b-9df5-6bee9a80c62d",
					"name": " QHTOD-T272 (1.0) [iAdmin] Restore your own deleted list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cea4dcc-243c-45ae-bec9-c8cd27e107ec",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0004",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0004",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=122",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "122"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "5c727f55-bd6f-4efa-9f9b-384ab710a3fe",
					"name": " QHTOD-T271 (1.0) [iUser] Restore another active user's deleted list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cea4dcc-243c-45ae-bec9-c8cd27e107ec",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=111",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "111"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "632c90bf-957f-41b5-aacb-fcda1a20a94d",
					"name": " QHTOD-T270 (1.0) [iUser] Restore your own deleted list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6cea4dcc-243c-45ae-bec9-c8cd27e107ec",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Account disabled.\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0003",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0003",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=138",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "138"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "534cdb22-a5fe-48b2-aaa6-62799584ac84",
					"name": " QHTOD-T274 (1.0) [noAuth] Restore a random deleted list [N] ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "828397e1-c5f5-4263-8c63-9580437df1e3",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 401 Unauthorized'] = responseCode.code === 401;",
									"",
									"tests['Responese time is < 400ms'] = responseTime < 400;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Authorization required.\");",
									"});",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ac62d70c-9081-43c4-b53f-3d8880652e3e",
								"type": "text/javascript",
								"exec": [
									" ",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/list-restore?list_id=138",
							"host": [
								"{{url}}"
							],
							"path": [
								"list-restore"
							],
							"query": [
								{
									"key": "list_id",
									"value": "138"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "dfb6db45-6790-45ce-a23c-698ea5612335",
			"name": "Search Users",
			"item": [
				{
					"_postman_id": "46dfa6d5-9a35-4d93-a60a-4a0db5628b98",
					"name": "Test0001",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7388e9ad-3300-4091-8548-32105503ee11",
								"type": "text/javascript",
								"exec": [
									"var data = JSON.parse(responseBody);",
									"tests['Status code is 200 OK'] = responseCode.code === 200;",
									"",
									"tests['Responese time is < 500ms'] = responseTime < 500;",
									"",
									"pm.test(\"Returned message is correct\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is successfully deleted.\");",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "test0001",
									"type": "string"
								},
								{
									"key": "username",
									"value": "test0001",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/users?username=3",
							"host": [
								"{{url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "3"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}